# Generated by Django 5.2.5 on 2025-08-07 06:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Hobbies',
            fields=[
                ('hobby_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'hobbies',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('province', models.CharField(max_length=30)),
                ('postal_code', models.CharField(max_length=10)),
                ('phone', models.CharField(max_length=20)),
                ('web_address', models.URLField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(choices=[('head', 'Head'), ('branch', 'Branch')], max_length=10)),
                ('capacity', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('birthdate', models.DateField()),
                ('ssn', models.CharField(max_length=11, unique=True)),
                ('medicare_number', models.CharField(max_length=20, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('province', models.CharField(max_length=30)),
                ('postal_code', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=255)),
                ('personnel_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'personnel',
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('session_id', models.AutoField(primary_key=True, serialize=False)),
                ('session_type', models.CharField(choices=[('game', 'Game'), ('training', 'Training')], max_length=10)),
                ('session_date', models.DateField()),
                ('session_time', models.TimeField()),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('province', models.CharField(blank=True, max_length=30, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'sessions',
            },
        ),
        migrations.CreateModel(
            name='FamilyMember',
            fields=[
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('birthdate', models.DateField()),
                ('ssn', models.CharField(max_length=11, unique=True)),
                ('medicare_number', models.CharField(max_length=20, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('province', models.CharField(max_length=30)),
                ('postal_code', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=255)),
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='club.location')),
            ],
            options={
                'db_table': 'family_member',
            },
        ),
        migrations.CreateModel(
            name='ClubMember',
            fields=[
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('birthdate', models.DateField()),
                ('ssn', models.CharField(max_length=11, unique=True)),
                ('medicare_number', models.CharField(max_length=20, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('province', models.CharField(max_length=30)),
                ('postal_code', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=255)),
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('activity', models.BooleanField(default=False)),
                ('height', models.PositiveIntegerField()),
                ('weight', models.PositiveIntegerField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('minor', models.BooleanField(blank=True, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.location')),
            ],
            options={
                'db_table': 'club_member',
            },
        ),
        migrations.CreateModel(
            name='SecondaryFamilyMember',
            fields=[
                ('secondary_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=20)),
                ('relationship_type', models.CharField(choices=[('father', 'Father'), ('mother', 'Mother'), ('grandmother', 'Grandmother'), ('grandfather', 'Grandfather'), ('tutor', 'Tutor'), ('partner', 'Partner'), ('friend', 'Friend'), ('other', 'Other')], max_length=20)),
                ('minor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.clubmember')),
            ],
            options={
                'db_table': 'secondary_family_member',
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('email_date', models.DateTimeField(auto_now_add=True)),
                ('receiver_email', models.EmailField(max_length=255)),
                ('subject', models.CharField(max_length=255)),
                ('body_preview', models.TextField(max_length=100)),
                ('email_type', models.CharField(choices=[('session_notification', 'Session Notification'), ('general', 'General'), ('reminder', 'Reminder')], default='session_notification', max_length=20)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('failed', 'Failed'), ('pending', 'Pending')], default='pending', max_length=10)),
                ('receiver_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.clubmember')),
                ('sender_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.location')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='club.sessions')),
            ],
            options={
                'db_table': 'email_log',
            },
        ),
        migrations.CreateModel(
            name='SessionTeams',
            fields=[
                ('team_id', models.AutoField(primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=100)),
                ('team_number', models.PositiveSmallIntegerField()),
                ('score', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('head_coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.personnel')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.location')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.sessions')),
            ],
            options={
                'db_table': 'session_teams',
            },
        ),
        migrations.CreateModel(
            name='PlayerAssignment',
            fields=[
                ('roster_id', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.CharField(choices=[('Setter', 'Setter'), ('Outside Hitter', 'Outside Hitter'), ('Opposite Hitter', 'Opposite Hitter'), ('Middle Blocker', 'Middle Blocker'), ('Defensive Specialist', 'Defensive Specialist'), ('Libero', 'Libero')], max_length=50)),
                ('is_starter', models.BooleanField(default=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.clubmember')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.sessionteams')),
            ],
            options={
                'db_table': 'player_assignment',
            },
        ),
        migrations.CreateModel(
            name='FamilyRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_id', models.PositiveIntegerField()),
                ('relationship_type', models.CharField(choices=[('father', 'Father'), ('mother', 'Mother'), ('grandmother', 'Grandmother'), ('grandfather', 'Grandfather'), ('tutor', 'Tutor'), ('partner', 'Partner'), ('friend', 'Friend'), ('other', 'Other')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, default=None, null=True)),
                ('is_primary', models.BooleanField(default=True)),
                ('emergency_contact', models.BooleanField(default=True)),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.familymember')),
                ('minor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.clubmember')),
            ],
            options={
                'db_table': 'family_relationship',
                'constraints': [models.CheckConstraint(condition=models.Q(('end_date__isnull', True), ('end_date__gte', models.F('start_date')), _connector='OR'), name='valid_association_date_range'), models.UniqueConstraint(fields=('minor', 'major', 'start_date'), name='unique_minor_family_start_date')],
            },
        ),
        migrations.CreateModel(
            name='MemberHobbies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hobby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.hobbies')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.clubmember')),
            ],
            options={
                'db_table': 'member_hobbies',
                'constraints': [models.UniqueConstraint(fields=('member', 'hobby'), name='unique_member_hobby')],
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('debit', 'Debit Card'), ('credit', 'Credit Card')], max_length=10)),
                ('membership_year', models.PositiveIntegerField()),
                ('payment_type', models.CharField(choices=[('membership', 'Membership'), ('donation', 'Donation')], default='membership', max_length=20)),
                ('installment_number', models.PositiveIntegerField(blank=True, null=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.clubmember')),
            ],
            options={
                'db_table': 'payments',
                'constraints': [models.CheckConstraint(condition=models.Q(('amount__gt', 0)), name='positive_amount'), models.CheckConstraint(condition=models.Q(('installment_number__isnull', True), models.Q(('installment_number__gte', 1), ('installment_number__lte', 4)), _connector='OR'), name='valid_installment_number')],
            },
        ),
        migrations.CreateModel(
            name='PersonnelAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_id', models.PositiveIntegerField()),
                ('role', models.CharField(choices=[('general manager', 'General Manager'), ('deputy manager', 'Deputy Manager'), ('treasurer', 'Treasurer'), ('secretary', 'Secretary'), ('administrator', 'Administrator'), ('captain', 'Captain'), ('coach', 'Coach'), ('assistant coach', 'Assistant Coach'), ('other', 'Other')], max_length=50)),
                ('mandate', models.CharField(choices=[('volunteer', 'Volunteer'), ('salaried', 'Salaried')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, default=None, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.location')),
                ('personnel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.personnel')),
            ],
            options={
                'db_table': 'personnel_assignment',
                'constraints': [models.CheckConstraint(condition=models.Q(('end_date__isnull', True), ('end_date__gte', models.F('start_date')), _connector='OR'), name='valid_date_range'), models.UniqueConstraint(fields=('personnel', 'start_date'), name='unique_personnel_start_date')],
            },
        ),
        migrations.AddConstraint(
            model_name='sessionteams',
            constraint=models.CheckConstraint(condition=models.Q(('team_number__in', [1, 2])), name='valid_team_number'),
        ),
        migrations.AddConstraint(
            model_name='sessionteams',
            constraint=models.UniqueConstraint(fields=('session', 'team_number'), name='unique_session_team'),
        ),
        migrations.AddConstraint(
            model_name='playerassignment',
            constraint=models.UniqueConstraint(fields=('team', 'member'), name='unique_member_team'),
        ),
    ]
