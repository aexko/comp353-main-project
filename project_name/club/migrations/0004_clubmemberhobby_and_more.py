# Generated by Django 5.2.4 on 2025-08-04 23:02

import django.db.models.deletion
from django.db import migrations, models, connection


def create_clubmemberhobby_if_not_exists(apps, schema_editor):
    """Create ClubMemberHobby table only if it doesn't already exist"""
    with connection.cursor() as cursor:
        # Check if table exists
        cursor.execute("""
            SELECT COUNT(*) 
            FROM information_schema.tables 
            WHERE table_schema = DATABASE() 
            AND table_name = 'club_clubmember_hobbies'
        """)
        table_exists = cursor.fetchone()[0] > 0

        if not table_exists:
            # Create the table if it doesn't exist
            cursor.execute("""
                CREATE TABLE club_clubmember_hobbies (
                    id INT AUTO_INCREMENT PRIMARY KEY,
                    clubmember_id INT NOT NULL,
                    hobby_id INT NOT NULL,
                    FOREIGN KEY (clubmember_id) REFERENCES club_clubmember(id) ON DELETE CASCADE,
                    FOREIGN KEY (hobby_id) REFERENCES club_hobby(id) ON DELETE CASCADE,
                    UNIQUE KEY unique_member_hobby (clubmember_id, hobby_id)
                )
            """)


class Migration(migrations.Migration):

    dependencies = [
        ('club', '0003_clubmember_gender'),
    ]

    operations = [
        # Use RunPython to safely create table if it doesn't exist
        migrations.RunPython(create_clubmemberhobby_if_not_exists, migrations.RunPython.noop),

        # Create the model in Django's metadata
        migrations.CreateModel(
            name='ClubMemberHobby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clubmember', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.clubmember')),
                ('hobby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.hobby')),
            ],
            options={
                'db_table': 'club_clubmember_hobbies',
            },
        ),
        migrations.AlterUniqueTogether(
            name='playerassignment',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='clubmember',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='personnel',
            name='mandate',
        ),
        migrations.RemoveField(
            model_name='personnel',
            name='role',
        ),
        migrations.AddField(
            model_name='personnelassignment',
            name='mandate',
            field=models.CharField(choices=[('Volunteer', 'Volunteer'), ('Salaried', 'Salaried')], default='Volunteer', max_length=10),
        ),
        migrations.AddField(
            model_name='personnelassignment',
            name='role',
            field=models.CharField(choices=[('Administrator', 'Administrator'), ('General Manager', 'General Manager'), ('Deputy Manager', 'Deputy Manager'), ('Treasurer', 'Treasurer'), ('Secretary', 'Secretary'), ('Captain', 'Captain'), ('Coach', 'Coach'), ('Assistant Coach', 'Assistant Coach'), ('Other', 'Other')], default='Other', max_length=50),
        ),
        migrations.AlterField(
            model_name='clubmember',
            name='membership_number',
            field=models.CharField(editable=False, max_length=36, unique=True),
        ),
        migrations.AlterField(
            model_name='minormemberassociation',
            name='relationship',
            field=models.CharField(choices=[('Father', 'Father'), ('Mother', 'Mother'), ('Grand-father', 'Grand-father'), ('Grand-mother', 'Grand-mother'), ('Tutor', 'Tutor'), ('Partner', 'Partner'), ('Friend', 'Friend'), ('Other', 'Other')], max_length=20),
        ),
        migrations.AlterField(
            model_name='playerassignment',
            name='role',
            field=models.CharField(choices=[('Setter', 'Setter'), ('Outside hitter', 'Outside hitter'), ('Opposite hitter', 'Opposite hitter'), ('Middle blocker', 'Middle blocker'), ('Defensive specialist', 'Defensive specialist'), ('Libero', 'Libero')], max_length=50),
        ),
        migrations.AddConstraint(
            model_name='minormemberassociation',
            constraint=models.CheckConstraint(condition=models.Q(('end_date__isnull', True), ('end_date__gte', models.F('start_date')), _connector='OR'), name='valid_date_range_minor'),
        ),
        migrations.AddConstraint(
            model_name='minormemberassociation',
            constraint=models.UniqueConstraint(fields=('minor_member', 'start_date'), name='unique_minor_start_date'),
        ),
        migrations.AddConstraint(
            model_name='personnelassignment',
            constraint=models.CheckConstraint(condition=models.Q(('end_date__isnull', True), ('end_date__gte', models.F('start_date')), _connector='OR'), name='valid_date_range'),
        ),
        migrations.AddConstraint(
            model_name='personnelassignment',
            constraint=models.UniqueConstraint(fields=('personnel', 'start_date'), name='unique_personnel_start_date'),
        ),
        migrations.AddConstraint(
            model_name='playerassignment',
            constraint=models.UniqueConstraint(fields=('club_member', 'team_formation'), name='unique_member_formation'),
        ),
        migrations.AlterModelTable(
            name='clubmember',
            table='club_clubmember',
        ),
        migrations.AlterModelTable(
            name='minormemberassociation',
            table='club_minormemberassociation',
        ),
        migrations.AlterModelTable(
            name='personnelassignment',
            table='club_personnelassignment',
        ),
        migrations.AlterModelTable(
            name='playerassignment',
            table='club_playerassignment',
        ),
        migrations.AddField(
            model_name='clubmemberhobby',
            name='clubmember',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.clubmember'),
        ),
        migrations.AddField(
            model_name='clubmemberhobby',
            name='hobby',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club.hobby'),
        ),
        migrations.AlterField(
            model_name='clubmember',
            name='hobbies',
            field=models.ManyToManyField(blank=True, through='club.ClubMemberHobby', to='club.hobby'),
        ),
        migrations.AlterUniqueTogether(
            name='clubmemberhobby',
            unique_together={('clubmember', 'hobby')},
        ),
    ]
