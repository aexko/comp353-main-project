<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/project_name/club/club_management_erd.dbml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/club_management_erd.dbml" />
              <option name="originalContent" value="// ERD for Club Management System in DBML format&#10;&#10;Table Person {&#10;  id integer [primary key]&#10;  first_name varchar(100)&#10;  last_name varchar(100)&#10;  date_of_birth date&#10;  social_security_number varchar(20) [unique, not null]&#10;  medicare_card_number varchar(20) [unique]&#10;  telephone_number varchar(20)&#10;  address varchar(255)&#10;  city varchar(100)&#10;  province varchar(100)&#10;  postal_code varchar(10)&#10;  email_address varchar(254) [unique]&#10;&#10;  Note: 'Abstract base model for all person-related entities'&#10;}&#10;&#10;Table Location {&#10;  id integer [primary key]&#10;  type varchar(10) [note: 'Head or Branch']&#10;  name varchar(255) [unique]&#10;  address varchar(255)&#10;  city varchar(100)&#10;  province varchar(100)&#10;  postal_code varchar(10)&#10;  phone_number varchar(20)&#10;  web_address varchar(200)&#10;  max_capacity integer&#10;}&#10;&#10;Table Hobby {&#10;  id integer [primary key]&#10;  name varchar(50) [unique]&#10;}&#10;&#10;Table Log {&#10;  id integer [primary key]&#10;  date datetime [default: `now()`]&#10;  sender varchar(255)&#10;  receiver varchar(254)&#10;  subject varchar(255)&#10;  body_snippet text(100)&#10;&#10;  Note: 'Logs every email generated by the system'&#10;}&#10;&#10;Table Personnel {&#10;  id integer [primary key]&#10;  // Inherits from Person&#10;  first_name varchar(100)&#10;  last_name varchar(100)&#10;  date_of_birth date&#10;  social_security_number varchar(20) [unique, not null]&#10;  medicare_card_number varchar(20) [unique]&#10;  telephone_number varchar(20)&#10;  address varchar(255)&#10;  city varchar(100)&#10;  province varchar(100)&#10;  postal_code varchar(10)&#10;  email_address varchar(254) [unique]&#10;  // Personnel specific fields&#10;  role varchar(50) [note: 'Administrator, General Manager, Coach, etc.']&#10;  mandate varchar(10) [note: 'Volunteer or Salaried']&#10;}&#10;&#10;Table PersonnelAssignment {&#10;  id integer [primary key]&#10;  personnel_id integer [ref: &gt; Personnel.id]&#10;  location_id integer [ref: &gt; Location.id]&#10;  start_date date&#10;  end_date date [null]&#10;&#10;  Note: 'Links personnel to locations with specific dates'&#10;}&#10;&#10;Table FamilyMember {&#10;  id integer [primary key]&#10;  // Inherits from Person&#10;  first_name varchar(100)&#10;  last_name varchar(100)&#10;  date_of_birth date&#10;  social_security_number varchar(20) [unique, not null]&#10;  medicare_card_number varchar(20) [unique]&#10;  telephone_number varchar(20)&#10;  address varchar(255)&#10;  city varchar(100)&#10;  province varchar(100)&#10;  postal_code varchar(10)&#10;  email_address varchar(254) [unique]&#10;  // FamilyMember specific fields&#10;  location_id integer [ref: &gt; Location.id, null]&#10;}&#10;&#10;Table SecondaryFamilyMember {&#10;  id integer [primary key]&#10;  primary_family_member_id integer [ref: &gt; FamilyMember.id]&#10;  first_name varchar(100)&#10;  last_name varchar(100)&#10;  telephone_number varchar(20)&#10;  relationship varchar(50)&#10;&#10;  Note: 'Secondary contacts for family members'&#10;}&#10;&#10;Table ClubMember {&#10;  id integer [primary key]&#10;  // Inherits from Person&#10;  first_name varchar(100)&#10;  last_name varchar(100)&#10;  date_of_birth date&#10;  social_security_number varchar(20) [unique, not null]&#10;  medicare_card_number varchar(20) [unique]&#10;  telephone_number varchar(20)&#10;  address varchar(255)&#10;  city varchar(100)&#10;  province varchar(100)&#10;  postal_code varchar(10)&#10;  email_address varchar(254) [unique]&#10;  // ClubMember specific fields&#10;  membership_number uuid [unique]&#10;  height decimal(5,2)&#10;  weight decimal(5,2)&#10;  location_id integer [ref: &gt; Location.id, null]&#10;  date_joined date [default: `now()`]&#10;  is_active boolean [default: true]&#10;}&#10;&#10;Table ClubMemberHobbies {&#10;  id integer [primary key]&#10;  club_member_id integer [ref: &gt; ClubMember.id]&#10;  hobby_id integer [ref: &gt; Hobby.id]&#10;&#10;  Note: 'Many-to-many relationship between ClubMember and Hobby'&#10;}&#10;&#10;Table MinorMemberAssociation {&#10;  id integer [primary key]&#10;  minor_member_id integer [ref: &gt; ClubMember.id]&#10;  family_member_id integer [ref: &gt; FamilyMember.id]&#10;  relationship varchar(20) [note: 'Father, Mother, Tutor, etc.']&#10;  start_date date&#10;  end_date date [null]&#10;&#10;  Note: 'Links minor club members to family members'&#10;}&#10;&#10;Table Payment {&#10;  id integer [primary key]&#10;  club_member_id integer [ref: &gt; ClubMember.id]&#10;  payment_date date&#10;  amount decimal(10,2)&#10;  method_of_payment varchar(10) [note: 'Cash, Debit, Credit']&#10;  for_year integer&#10;&#10;  Note: 'Records payments made by club members'&#10;}&#10;&#10;Table TeamFormation {&#10;  id integer [primary key]&#10;  location_id integer [ref: &gt; Location.id]&#10;  team_name varchar(100)&#10;  head_coach_id integer [ref: &gt; Personnel.id]&#10;  session_date date&#10;  start_time time&#10;  session_address varchar(255)&#10;  is_game boolean [default: false]&#10;  score_team1 integer [null]&#10;  score_team2 integer [null]&#10;&#10;  Note: 'Represents team formations for games or training sessions'&#10;}&#10;&#10;Table PlayerAssignment {&#10;  id integer [primary key]&#10;  club_member_id integer [ref: &gt; ClubMember.id]&#10;  team_formation_id integer [ref: &gt; TeamFormation.id]&#10;  role varchar(20) [note: 'Setter, Libero, Outside Hitter, etc.']&#10;&#10;  indexes {&#10;    (club_member_id, team_formation_id) [unique]&#10;  }&#10;&#10;  Note: 'Links club members to team formations with assigned roles'&#10;}&#10;&#10;// Relationships Summary:&#10;// 1. Location has many Personnel (through PersonnelAssignment)&#10;// 2. Location has many FamilyMember&#10;// 3. Location has many ClubMember&#10;// 4. Location has many TeamFormation&#10;// 5. Personnel can coach many TeamFormation (as head_coach)&#10;// 6. FamilyMember has many SecondaryFamilyMember&#10;// 7. FamilyMember has many MinorMemberAssociation&#10;// 8. ClubMember has many MinorMemberAssociation&#10;// 9. ClubMember has many Payment&#10;// 10. ClubMember has many PlayerAssignment&#10;// 11. ClubMember has many Hobby (through ClubMemberHobbies)&#10;// 12. TeamFormation has many PlayerAssignment&#10;// 13. Hobby has many ClubMember (through ClubMemberHobbies)&#10;" />
              <option name="updatedContent" value="// ERD for Club Management System in DBML format&#10;&#10;Table Person {&#10;  id integer [primary key]&#10;  first_name varchar(100)&#10;  last_name varchar(100)&#10;  date_of_birth date&#10;  social_security_number varchar(20) [unique, not null]&#10;  medicare_card_number varchar(20) [unique]&#10;  telephone_number varchar(20)&#10;  address varchar(255)&#10;  city varchar(100)&#10;  province varchar(100)&#10;  postal_code varchar(10)&#10;  email_address varchar(254) [unique]&#10;&#10;  Note: 'Abstract base model for all person-related entities'&#10;}&#10;&#10;Table Location {&#10;  id integer [primary key]&#10;  type varchar(10) [note: 'Head or Branch']&#10;  name varchar(255) [unique]&#10;  address varchar(255)&#10;  city varchar(100)&#10;  province varchar(100)&#10;  postal_code varchar(10)&#10;  phone_number varchar(20)&#10;  web_address varchar(200)&#10;  max_capacity integer&#10;}&#10;&#10;Table Hobby {&#10;  id integer [primary key]&#10;  name varchar(50) [unique]&#10;}&#10;&#10;Table Log {&#10;  id integer [primary key]&#10;  date datetime [default: `now()`]&#10;  sender varchar(255)&#10;  receiver varchar(254)&#10;  subject varchar(255)&#10;  body_snippet text(100)&#10;&#10;  Note: 'Logs every email generated by the system'&#10;}&#10;&#10;Table Personnel {&#10;  id integer [primary key]&#10;  // Inherits from Person&#10;  first_name varchar(100)&#10;  last_name varchar(100)&#10;  date_of_birth date&#10;  social_security_number varchar(20) [unique, not null]&#10;  medicare_card_number varchar(20) [unique]&#10;  telephone_number varchar(20)&#10;  address varchar(255)&#10;  city varchar(100)&#10;  province varchar(100)&#10;  postal_code varchar(10)&#10;  email_address varchar(254) [unique]&#10;  // Personnel specific fields&#10;  role varchar(50) [note: 'Administrator, General Manager, Coach, etc.']&#10;  mandate varchar(10) [note: 'Volunteer or Salaried']&#10;}&#10;&#10;Table PersonnelAssignment {&#10;  id integer [primary key]&#10;  personnel_id integer [ref: &gt; Personnel.id]&#10;  location_id integer [ref: &gt; Location.id]&#10;  start_date date&#10;  end_date date [null]&#10;&#10;  Note: 'Links personnel to locations with specific dates'&#10;}&#10;&#10;Table FamilyMember {&#10;  id integer [primary key]&#10;  // Inherits from Person&#10;  first_name varchar(100)&#10;  last_name varchar(100)&#10;  date_of_birth date&#10;  social_security_number varchar(20) [unique, not null]&#10;  medicare_card_number varchar(20) [unique]&#10;  telephone_number varchar(20)&#10;  address varchar(255)&#10;  city varchar(100)&#10;  province varchar(100)&#10;  postal_code varchar(10)&#10;  email_address varchar(254) [unique]&#10;  // FamilyMember specific fields&#10;  location_id integer [ref: &gt; Location.id, null]&#10;}&#10;&#10;Table SecondaryFamilyMember {&#10;  id integer [primary key]&#10;  primary_family_member_id integer [ref: &gt; FamilyMember.id]&#10;  first_name varchar(100)&#10;  last_name varchar(100)&#10;  telephone_number varchar(20)&#10;  relationship varchar(50)&#10;&#10;  Note: 'Secondary contacts for family members'&#10;}&#10;&#10;Table ClubMember {&#10;  id integer [primary key]&#10;  // Inherits from Person&#10;  first_name varchar(100)&#10;  last_name varchar(100)&#10;  date_of_birth date&#10;  social_security_number varchar(20) [unique, not null]&#10;  medicare_card_number varchar(20) [unique]&#10;  telephone_number varchar(20)&#10;  address varchar(255)&#10;  city varchar(100)&#10;  province varchar(100)&#10;  postal_code varchar(10)&#10;  email_address varchar(254) [unique]&#10;  // ClubMember specific fields&#10;  membership_number uuid [unique]&#10;  height decimal(5,2)&#10;  weight decimal(5,2)&#10;  location_id integer [ref: &gt; Location.id, null]&#10;  date_joined date [default: `now()`]&#10;  is_active boolean [default: true]&#10;  gender varchar(1) [note: 'M for Male, F for Female - enforces same-gender teams']&#10;}&#10;&#10;Table ClubMemberHobbies {&#10;  id integer [primary key]&#10;  club_member_id integer [ref: &gt; ClubMember.id]&#10;  hobby_id integer [ref: &gt; Hobby.id]&#10;&#10;  Note: 'Many-to-many relationship between ClubMember and Hobby'&#10;}&#10;&#10;Table MinorMemberAssociation {&#10;  id integer [primary key]&#10;  minor_member_id integer [ref: &gt; ClubMember.id]&#10;  family_member_id integer [ref: &gt; FamilyMember.id]&#10;  relationship varchar(20) [note: 'Father, Mother, Tutor, etc.']&#10;  start_date date&#10;  end_date date [null]&#10;&#10;  Note: 'Links minor club members to family members'&#10;}&#10;&#10;Table Payment {&#10;  id integer [primary key]&#10;  club_member_id integer [ref: &gt; ClubMember.id]&#10;  payment_date date&#10;  amount decimal(10,2)&#10;  method_of_payment varchar(10) [note: 'Cash, Debit, Credit']&#10;  for_year integer&#10;&#10;  Note: 'Records payments made by club members'&#10;}&#10;&#10;Table TeamFormation {&#10;  id integer [primary key]&#10;  location_id integer [ref: &gt; Location.id]&#10;  team_name varchar(100)&#10;  head_coach_id integer [ref: &gt; Personnel.id]&#10;  session_date date&#10;  start_time time&#10;  session_address varchar(255)&#10;  is_game boolean [default: false]&#10;  score_team1 integer [null]&#10;  score_team2 integer [null]&#10;&#10;  Note: 'Represents team formations for games or training sessions'&#10;}&#10;&#10;Table PlayerAssignment {&#10;  id integer [primary key]&#10;  club_member_id integer [ref: &gt; ClubMember.id]&#10;  team_formation_id integer [ref: &gt; TeamFormation.id]&#10;  role varchar(20) [note: 'Setter, Libero, Outside Hitter, etc.']&#10;&#10;  indexes {&#10;    (club_member_id, team_formation_id) [unique]&#10;  }&#10;&#10;  Note: 'Links club members to team formations with assigned roles'&#10;}&#10;&#10;// Relationships Summary:&#10;// 1. Location has many Personnel (through PersonnelAssignment)&#10;// 2. Location has many FamilyMember&#10;// 3. Location has many ClubMember&#10;// 4. Location has many TeamFormation&#10;// 5. Personnel can coach many TeamFormation (as head_coach)&#10;// 6. FamilyMember has many SecondaryFamilyMember&#10;// 7. FamilyMember has many MinorMemberAssociation&#10;// 8. ClubMember has many MinorMemberAssociation&#10;// 9. ClubMember has many Payment&#10;// 10. ClubMember has many PlayerAssignment&#10;// 11. ClubMember has many Hobby (through ClubMemberHobbies)&#10;// 12. TeamFormation has many PlayerAssignment&#10;// 13. Hobby has many ClubMember (through ClubMemberHobbies)" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/erd_diagram.txt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/erd_diagram.txt" />
              <option name="originalContent" value="&#10;2. **PlayerAssignment**:&#10;   - Attributes: club_member, team_formation, role&#10;   - Relationships:&#10;     - `ClubMember` (ForeignKey)&#10;     - `TeamFormation` (ForeignKey, unique_together)&#10;&#10;3. **ClubMember**:&#10;   - Attributes: membership_number, height, weight, hobbies, location, date_joined, is_active&#10;   - Relationships:&#10;     - `Location` (ForeignKey)&#10;     - `Hobby` (ManyToManyField)&#10;&#10;4. **Location**:&#10;   - Attributes: type, name, address, city, province, postal_code, phone_number, web_address, max_capacity&#10;&#10;5. **Log**:&#10;   - Attributes: date, sender, receiver, subject, body_snippet&#10;&#10;Relationships:&#10;- `TeamFormation` -&gt; `Location` (1-to-1)&#10;- `TeamFormation` -&gt; `Personnel` (1-to-1, head_coach)&#10;- `PlayerAssignment` -&gt; `ClubMember` (1-to-1)&#10;- `PlayerAssignment` -&gt; `TeamFormation` (1-to-1)&#10;- `ClubMember` -&gt; `Location` (1-to-1)&#10;- `ClubMember` -&gt; `Hobby` (Many-to-Many)" />
              <option name="updatedContent" value="Entities and Relationships:&#10;&#10;1. **TeamFormation**:&#10;   - Attributes: location, team_name, head_coach, session_date, start_time, session_address, is_game, score_team1, score_team2&#10;   - Relationships:&#10;     - `Location` (ForeignKey)&#10;     - `Personnel` (ForeignKey, head_coach)&#10;     - `PlayerAssignment` (related_name='players')&#10;&#10;2. **PlayerAssignment**:&#10;   - Attributes: club_member, team_formation, role&#10;   - Relationships:&#10;     - `ClubMember` (ForeignKey)&#10;     - `TeamFormation` (ForeignKey, unique_together)&#10;&#10;3. **ClubMember**:&#10;   - Attributes: membership_number, height, weight, hobbies, location, date_joined, is_active&#10;   - Relationships:&#10;     - `Location` (ForeignKey)&#10;     - `Hobby` (ManyToManyField)&#10;&#10;4. **Location**:&#10;   - Attributes: type, name, address, city, province, postal_code, phone_number, web_address, max_capacity&#10;&#10;5. **Log**:&#10;   - Attributes: date, sender, receiver, subject, body_snippet&#10;&#10;Relationships:&#10;- `TeamFormation` -&gt; `Location` (1-to-1)&#10;- `TeamFormation` -&gt; `Personnel` (1-to-1, head_coach)&#10;- `PlayerAssignment` -&gt; `ClubMember` (1-to-1)&#10;- `PlayerAssignment` -&gt; `TeamFormation` (1-to-1)&#10;- `ClubMember` -&gt; `Location` (1-to-1)&#10;- `ClubMember` -&gt; `Hobby` (Many-to-Many)" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/management/commands/send_weekly_emails.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/management/commands/send_weekly_emails.py" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/models.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/models.py" />
              <option name="originalContent" value="import uuid&#10;&#10;from django.db import models&#10;from django.core.exceptions import ValidationError&#10;from datetime import date, timedelta&#10;&#10;class Person(models.Model):&#10;    &quot;&quot;&quot;&#10;    Person model that serves as a base for all people-related models&#10;    &quot;&quot;&quot;&#10;    first_name = models.CharField(max_length=100)&#10;    last_name = models.CharField(max_length=100)&#10;    date_of_birth = models.DateField()&#10;    social_security_number = models.CharField(max_length=20, unique=True, null=False, blank=False)&#10;    medicare_card_number = models.CharField(max_length=20, unique=True)&#10;    telephone_number = models.CharField(max_length=20)&#10;    address = models.CharField(max_length=255)&#10;    city = models.CharField(max_length=100)&#10;    province = models.CharField(max_length=100)&#10;    postal_code = models.CharField(max_length=10)&#10;    email_address = models.EmailField(unique=True)&#10;&#10;    class Meta:&#10;        abstract = True&#10;&#10;&#10;class Location(models.Model):&#10;    &quot;&quot;&quot;&#10;    Represents a club location which can be the head location or a branch&#10;    &quot;&quot;&quot;&#10;    TYPE_CHOICES = [&#10;        ('Head', 'Head'),&#10;        ('Branch', 'Branch'),&#10;    ]&#10;    type = models.CharField(max_length=10, choices=TYPE_CHOICES)&#10;    name = models.CharField(max_length=255, unique=True)&#10;    address = models.CharField(max_length=255)&#10;    city = models.CharField(max_length=100)&#10;    province = models.CharField(max_length=100)&#10;    postal_code = models.CharField(max_length=10)&#10;    phone_number = models.CharField(max_length=20)&#10;    web_address = models.URLField(blank=True, null=True)&#10;    max_capacity = models.PositiveIntegerField()&#10;&#10;    def __str__(self):&#10;        return f&quot;{self.name} ({self.type})&quot;&#10;&#10;&#10;class Hobby(models.Model):&#10;    &quot;&quot;&quot;&#10;    A list of hobbies that can be associated with club members&#10;    &quot;&quot;&quot;&#10;    name = models.CharField(max_length=50, unique=True)&#10;&#10;    def __str__(self):&#10;        return self.name&#10;&#10;&#10;class Log(models.Model):&#10;    &quot;&quot;&quot;&#10;    Logs every email generated by the system&#10;    &quot;&quot;&quot;&#10;    date = models.DateTimeField(auto_now_add=True)&#10;    sender = models.CharField(max_length=255)&#10;    receiver = models.EmailField()&#10;    subject = models.CharField(max_length=255)&#10;    body_snippet = models.TextField(max_length=100)&#10;&#10;    def __str__(self):&#10;        return f&quot;Email to {self.receiver} on {self.date}&quot;&#10;&#10;&#10;class Personnel(Person):&#10;    &quot;&quot;&quot;&#10;    Represents a person working at a club location&#10;    &quot;&quot;&quot;&#10;    ROLE_CHOICES = [&#10;        ('Administrator', 'Administrator'),&#10;        ('General Manager', 'General Manager'),&#10;        ('Deputy Manager', 'Deputy Manager'),&#10;        ('Treasurer', 'Treasurer'),&#10;        ('Secretary', 'Secretary'),&#10;        ('Captain', 'Captain'),&#10;        ('Coach', 'Coach'),&#10;        ('Assistant Coach', 'Assistant Coach'),&#10;        ('Other', 'Other'),&#10;    ]&#10;    MANDATE_CHOICES = [&#10;        ('Volunteer', 'Volunteer'),&#10;        ('Salaried', 'Salaried'),&#10;    ]&#10;    role = models.CharField(max_length=50, choices=ROLE_CHOICES)&#10;    mandate = models.CharField(max_length=10, choices=MANDATE_CHOICES)&#10;&#10;    def __str__(self):&#10;        return f&quot;Personnel: {self.first_name} {self.last_name} ({self.role})&quot;&#10;&#10;&#10;class PersonnelAssignment(models.Model):&#10;    &quot;&quot;&quot;&#10;    Links a personnel member to a location with specific dates&#10;    &quot;&quot;&quot;&#10;    personnel = models.ForeignKey(Personnel, on_delete=models.CASCADE)&#10;    location = models.ForeignKey(Location, on_delete=models.CASCADE)&#10;    start_date = models.DateField()&#10;    end_date = models.DateField(null=True, blank=True)&#10;&#10;    def __str__(self):&#10;        return f&quot;{self.personnel} at {self.location} from {self.start_date}&quot;&#10;&#10;&#10;class FamilyMember(Person):&#10;    &quot;&quot;&quot;&#10;    Represents a primary family member who can register minor club members&#10;    &quot;&quot;&quot;&#10;    location = models.ForeignKey(Location, on_delete=models.SET_NULL, null=True, blank=True)&#10;&#10;    def __str__(self):&#10;        return f&quot;Family Member {self.first_name} {self.last_name}&quot;&#10;&#10;&#10;class SecondaryFamilyMember(models.Model):&#10;    &quot;&quot;&quot;&#10;    Represents a secondary contact for a family member&#10;    &quot;&quot;&quot;&#10;    primary_family_member = models.ForeignKey(FamilyMember, on_delete=models.CASCADE, related_name='secondary_contacts')&#10;    first_name = models.CharField(max_length=100)&#10;    last_name = models.CharField(max_length=100)&#10;    telephone_number = models.CharField(max_length=20)&#10;    relationship = models.CharField(max_length=50)&#10;&#10;    def __str__(self):&#10;        return f&quot;Secondary Contact {self.first_name} {self.last_name}&quot;&#10;&#10;class ClubMember(Person):&#10;    &quot;&quot;&quot;&#10;    Represents a club member who can be a minor or an adult&#10;    &quot;&quot;&quot;&#10;    membership_number = models.UUIDField(default=uuid.uuid4, unique=True, editable=False)&#10;    height = models.DecimalField(max_digits=5, decimal_places=2)&#10;    weight = models.DecimalField(max_digits=5, decimal_places=2)&#10;    hobbies = models.ManyToManyField(Hobby, blank=True)&#10;    location = models.ForeignKey(Location, on_delete=models.SET_NULL, null=True)&#10;    date_joined = models.DateField(auto_now_add=True)&#10;    is_active = models.BooleanField(default=True)&#10;    gender = models.CharField(max_length=1, choices=[('M', 'Male'), ('F', 'Female')], default='M')&#10;&#10;    def __str__(self):&#10;        return f&quot;Member: {self.first_name} {self.last_name}&quot;&#10;&#10;    def clean(self):&#10;        # Constraint: Member must be at least 11 years old at registration&#10;        if self.age &lt; 11:&#10;            raise ValidationError(&quot;Club member must be at least 11 years old to register.&quot;)&#10;&#10;        # Constraint: Minor members must have family member association&#10;        if self.is_minor and not hasattr(self, 'pk'):  # New member&#10;            # This will be checked after save in the view&#10;            pass&#10;&#10;    @property&#10;    def age(self):&#10;        today = date.today()&#10;        return today.year - self.date_of_birth.year - ((today.month, today.day) &lt; (self.date_of_birth.month, self.date_of_birth.day))&#10;&#10;    @property&#10;    def is_minor(self):&#10;        return self.age &lt; 18&#10;&#10;    @property&#10;    def is_major(self):&#10;        return self.age &gt;= 18&#10;&#10;    @property&#10;    def annual_fee(self):&#10;        &quot;&quot;&quot;Constraint: $100 for minors, $200 for majors&quot;&quot;&quot;&#10;        return 100.00 if self.is_minor else 200.00&#10;&#10;    def total_payments_for_year(self, year):&#10;        &quot;&quot;&quot;Calculate total payments for a specific year&quot;&quot;&quot;&#10;        return self.payment_set.filter(for_year=year).aggregate(&#10;            total=models.Sum('amount')&#10;        )['total'] or 0&#10;&#10;    def is_fees_paid_for_year(self, year):&#10;        &quot;&quot;&quot;Check if annual fees are fully paid for a year&quot;&quot;&quot;&#10;        return self.total_payments_for_year(year) &gt;= self.annual_fee&#10;&#10;&#10;class MinorMemberAssociation(models.Model):&#10;    &quot;&quot;&quot;&#10;    Links a minor club member to a family member and defines their relationship&#10;    &quot;&quot;&quot;&#10;    RELATIONSHIP_CHOICES = [&#10;        ('Father', 'Father'), ('Mother', 'Mother'), ('Grandfather', 'Grandfather'),&#10;        ('Grandmother', 'Grandmother'), ('Tutor', 'Tutor'), ('Partner', 'Partner'),&#10;        ('Friend', 'Friend'), ('Other', 'Other'),&#10;    ]&#10;    minor_member = models.ForeignKey(ClubMember, on_delete=models.CASCADE)&#10;    family_member = models.ForeignKey(FamilyMember, on_delete=models.CASCADE)&#10;    relationship = models.CharField(max_length=20, choices=RELATIONSHIP_CHOICES)&#10;    start_date = models.DateField()&#10;    end_date = models.DateField(null=True, blank=True)&#10;&#10;    def __str__(self):&#10;        return f&quot;{self.minor_member.first_name} ({self.relationship}) with {self.family_member.first_name}&quot;&#10;&#10;&#10;class Payment(models.Model):&#10;    &quot;&quot;&quot;&#10;    Records a payment made by a club member&#10;    &quot;&quot;&quot;&#10;    METHOD_CHOICES = [&#10;        ('Cash', 'Cash'),&#10;        ('Debit', 'Debit Card'),&#10;        ('Credit', 'Credit Card'),&#10;    ]&#10;    club_member = models.ForeignKey(ClubMember, on_delete=models.CASCADE)&#10;    payment_date = models.DateField()&#10;    amount = models.DecimalField(max_digits=10, decimal_places=2)&#10;    method_of_payment = models.CharField(max_length=10, choices=METHOD_CHOICES)&#10;    for_year = models.PositiveIntegerField()&#10;&#10;    def __str__(self):&#10;        return f&quot;Payment by {self.club_member} for year {self.for_year}&quot;&#10;&#10;&#10;class TeamFormation(models.Model):&#10;    &quot;&quot;&quot;&#10;    Represents a single team formation for a game or training session&#10;    &quot;&quot;&quot;&#10;    location = models.ForeignKey(Location, on_delete=models.CASCADE)&#10;    team_name = models.CharField(max_length=100)&#10;    head_coach = models.ForeignKey(Personnel, on_delete=models.CASCADE, related_name='coached_teams')&#10;    session_date = models.DateField()&#10;    start_time = models.TimeField()&#10;    session_address = models.CharField(max_length=255)&#10;    is_game = models.BooleanField(default=False)&#10;    score_team1 = models.PositiveIntegerField(null=True, blank=True)&#10;    score_team2 = models.PositiveIntegerField(null=True, blank=True)&#10;&#10;    def __str__(self):&#10;        session_type = &quot;Game&quot; if self.is_game else &quot;Training&quot;&#10;        return f&quot;{self.team_name} {session_type} on {self.session_date} at {self.start_time}&quot;&#10;&#10;&#10;class PlayerAssignment(models.Model):&#10;    &quot;&quot;&quot;&#10;    Links a club member to a team formation and assigns their role&#10;    &quot;&quot;&quot;&#10;    PLAYER_ROLES = [&#10;        ('Setter', 'Setter'),&#10;        ('Outside Hitter', 'Outside Hitter'),&#10;        ('Opposite Hitter', 'Opposite Hitter'),&#10;        ('Middle Blocker', 'Middle Blocker'),&#10;        ('Defensive Specialist', 'Defensive Specialist'),&#10;        ('Libero', 'Libero'),&#10;    ]&#10;    club_member = models.ForeignKey(ClubMember, on_delete=models.CASCADE)&#10;    team_formation = models.ForeignKey(TeamFormation, on_delete=models.CASCADE, related_name='players')&#10;    role = models.CharField(max_length=20, choices=PLAYER_ROLES)&#10;&#10;    class Meta:&#10;        # player can only be in a team once per formation&#10;        unique_together = ('club_member', 'team_formation')&#10;&#10;    def clean(self):&#10;        # Validate minimum age (11 years old)&#10;        if self.club_member.age &lt; 11:&#10;            raise ValidationError(&quot;Club member must be at least 11 years old.&quot;)&#10;&#10;        # Validate membership is active (fees paid for current year)&#10;        if not self.club_member.is_active:&#10;            raise ValidationError(&quot;Club member must have active membership to participate.&quot;)&#10;&#10;        # Validate same gender in team formation&#10;        team_members = PlayerAssignment.objects.filter(team_formation=self.team_formation).exclude(pk=self.pk)&#10;        if team_members.exists():&#10;            existing_gender = team_members.first().club_member.gender&#10;            if self.club_member.gender != existing_gender:&#10;                raise ValidationError(&quot;All players in the same team must be of the same gender.&quot;)&#10;&#10;        # Validate same location for all team members&#10;        if self.club_member.location != self.team_formation.location:&#10;            raise ValidationError(&quot;All players must be from the same location as the team formation.&quot;)&#10;&#10;        # Validate 3-hour gap between team formations on same day&#10;        same_day_assignments = PlayerAssignment.objects.filter(&#10;            club_member=self.club_member,&#10;            team_formation__session_date=self.team_formation.session_date&#10;        ).exclude(pk=self.pk)&#10;&#10;        for assignment in same_day_assignments:&#10;            time_diff = abs((self.team_formation.start_time.hour * 60 + self.team_formation.start_time.minute) -&#10;                          (assignment.team_formation.start_time.hour * 60 + assignment.team_formation.start_time.minute))&#10;            if time_diff &lt; 180:  # 3 hours = 180 minutes&#10;                raise ValidationError(&quot;At least 3 hours gap required between team formations on the same day.&quot;)&#10;&#10;    def save(self, *args, **kwargs):&#10;        self.clean()&#10;        super().save(*args, **kwargs)&#10;&#10;    def __str__(self):&#10;        return f&quot;{self.club_member.first_name} as {self.role} in {self.team_formation.team_name}&quot;&#10;" />
              <option name="updatedContent" value="import uuid&#10;&#10;from django.db import models&#10;from django.core.exceptions import ValidationError&#10;from datetime import date, timedelta&#10;&#10;class Person(models.Model):&#10;    &quot;&quot;&quot;&#10;    Person model that serves as a base for all people-related models&#10;    &quot;&quot;&quot;&#10;    first_name = models.CharField(max_length=100)&#10;    last_name = models.CharField(max_length=100)&#10;    date_of_birth = models.DateField()&#10;    social_security_number = models.CharField(max_length=20, unique=True, null=False, blank=False)&#10;    medicare_card_number = models.CharField(max_length=20, unique=True)&#10;    telephone_number = models.CharField(max_length=20)&#10;    address = models.CharField(max_length=255)&#10;    city = models.CharField(max_length=100)&#10;    province = models.CharField(max_length=100)&#10;    postal_code = models.CharField(max_length=10)&#10;    email_address = models.EmailField(unique=True)&#10;&#10;    class Meta:&#10;        abstract = True&#10;&#10;&#10;class Location(models.Model):&#10;    &quot;&quot;&quot;&#10;    Represents a club location which can be the head location or a branch&#10;    &quot;&quot;&quot;&#10;    TYPE_CHOICES = [&#10;        ('Head', 'Head'),&#10;        ('Branch', 'Branch'),&#10;    ]&#10;    type = models.CharField(max_length=10, choices=TYPE_CHOICES)&#10;    name = models.CharField(max_length=255, unique=True)&#10;    address = models.CharField(max_length=255)&#10;    city = models.CharField(max_length=100)&#10;    province = models.CharField(max_length=100)&#10;    postal_code = models.CharField(max_length=10)&#10;    phone_number = models.CharField(max_length=20)&#10;    web_address = models.URLField(blank=True, null=True)&#10;    max_capacity = models.PositiveIntegerField()&#10;&#10;    def __str__(self):&#10;        return f&quot;{self.name} ({self.type})&quot;&#10;&#10;&#10;class Hobby(models.Model):&#10;    &quot;&quot;&quot;&#10;    A list of hobbies that can be associated with club members&#10;    &quot;&quot;&quot;&#10;    name = models.CharField(max_length=50, unique=True)&#10;&#10;    def __str__(self):&#10;        return self.name&#10;&#10;&#10;class Log(models.Model):&#10;    &quot;&quot;&quot;&#10;    Logs every email generated by the system&#10;    &quot;&quot;&quot;&#10;    date = models.DateTimeField(auto_now_add=True)&#10;    sender = models.CharField(max_length=255)&#10;    receiver = models.EmailField()&#10;    subject = models.CharField(max_length=255)&#10;    body_snippet = models.TextField(max_length=100)&#10;&#10;    def __str__(self):&#10;        return f&quot;Email to {self.receiver} on {self.date}&quot;&#10;&#10;&#10;class Personnel(Person):&#10;    &quot;&quot;&quot;&#10;    Represents a person working at a club location&#10;    &quot;&quot;&quot;&#10;&#10;    def __str__(self):&#10;        return f&quot;Personnel: {self.first_name} {self.last_name}&quot;&#10;    &#10;    def current_role(self):&#10;        &quot;&quot;&quot;Get current active role&quot;&quot;&quot;&#10;        current_assignment = self.personnelassignment_set.filter(end_date__isnull=True).first()&#10;        return current_assignment.role if current_assignment else None&#10;    &#10;    def current_location(self):&#10;        &quot;&quot;&quot;Get current active location&quot;&quot;&quot;&#10;        current_assignment = self.personnelassignment_set.filter(end_date__isnull=True).first()&#10;        return current_assignment.location if current_assignment else None&#10;&#10;&#10;class PersonnelAssignment(models.Model):&#10;    &quot;&quot;&quot;&#10;    Links a personnel member to a location with specific dates, role, and mandate&#10;    &quot;&quot;&quot;&#10;    ROLE_CHOICES = [&#10;        ('Administrator', 'Administrator'),&#10;        ('General Manager', 'General Manager'),&#10;        ('Deputy Manager', 'Deputy Manager'),&#10;        ('Treasurer', 'Treasurer'),&#10;        ('Secretary', 'Secretary'),&#10;        ('Captain', 'Captain'),&#10;        ('Coach', 'Coach'),&#10;        ('Assistant Coach', 'Assistant Coach'),&#10;        ('Other', 'Other'),&#10;    ]&#10;    MANDATE_CHOICES = [&#10;        ('Volunteer', 'Volunteer'),&#10;        ('Salaried', 'Salaried'),&#10;    ]&#10;    &#10;    personnel = models.ForeignKey(Personnel, on_delete=models.CASCADE)&#10;    location = models.ForeignKey(Location, on_delete=models.CASCADE)&#10;    role = models.CharField(max_length=50, choices=ROLE_CHOICES)&#10;    mandate = models.CharField(max_length=10, choices=MANDATE_CHOICES)&#10;    start_date = models.DateField()&#10;    end_date = models.DateField(null=True, blank=True)&#10;&#10;    class Meta:&#10;        # Ensure no overlapping assignments for same person&#10;        constraints = [&#10;            models.CheckConstraint(&#10;                check=models.Q(end_date__isnull=True) | models.Q(end_date__gte=models.F('start_date')),&#10;                name='valid_date_range'&#10;            )&#10;        ]&#10;&#10;    def __str__(self):&#10;        return f&quot;{self.personnel} as {self.role} at {self.location} from {self.start_date}&quot;&#10;&#10;&#10;class FamilyMember(Person):&#10;    &quot;&quot;&quot;&#10;    Represents a primary family member who can register minor club members&#10;    &quot;&quot;&quot;&#10;    location = models.ForeignKey(Location, on_delete=models.SET_NULL, null=True, blank=True)&#10;&#10;    def __str__(self):&#10;        return f&quot;Family Member {self.first_name} {self.last_name}&quot;&#10;&#10;&#10;class SecondaryFamilyMember(models.Model):&#10;    &quot;&quot;&quot;&#10;    Represents a secondary contact for a family member&#10;    &quot;&quot;&quot;&#10;    primary_family_member = models.ForeignKey(FamilyMember, on_delete=models.CASCADE, related_name='secondary_contacts')&#10;    first_name = models.CharField(max_length=100)&#10;    last_name = models.CharField(max_length=100)&#10;    telephone_number = models.CharField(max_length=20)&#10;    relationship = models.CharField(max_length=50)&#10;&#10;    def __str__(self):&#10;        return f&quot;Secondary Contact {self.first_name} {self.last_name}&quot;&#10;&#10;class ClubMember(Person):&#10;    &quot;&quot;&quot;&#10;    Represents a club member who can be a minor or an adult&#10;    &quot;&quot;&quot;&#10;    membership_number = models.UUIDField(default=uuid.uuid4, unique=True, editable=False)&#10;    height = models.DecimalField(max_digits=5, decimal_places=2)&#10;    weight = models.DecimalField(max_digits=5, decimal_places=2)&#10;    hobbies = models.ManyToManyField(Hobby, blank=True)&#10;    location = models.ForeignKey(Location, on_delete=models.SET_NULL, null=True)&#10;    date_joined = models.DateField(auto_now_add=True)&#10;    is_active = models.BooleanField(default=True)&#10;    gender = models.CharField(max_length=1, choices=[('M', 'Male'), ('F', 'Female')], default='M')&#10;&#10;    def __str__(self):&#10;        return f&quot;Member: {self.first_name} {self.last_name}&quot;&#10;&#10;    def clean(self):&#10;        # Constraint: Member must be at least 11 years old at registration&#10;        if self.age &lt; 11:&#10;            raise ValidationError(&quot;Club member must be at least 11 years old to register.&quot;)&#10;&#10;        # Constraint: Minor members must have family member association&#10;        if self.is_minor and not hasattr(self, 'pk'):  # New member&#10;            # This will be checked after save in the view&#10;            pass&#10;&#10;    @property&#10;    def age(self):&#10;        today = date.today()&#10;        return today.year - self.date_of_birth.year - ((today.month, today.day) &lt; (self.date_of_birth.month, self.date_of_birth.day))&#10;&#10;    @property&#10;    def is_minor(self):&#10;        return self.age &lt; 18&#10;&#10;    @property&#10;    def is_major(self):&#10;        return self.age &gt;= 18&#10;&#10;    @property&#10;    def annual_fee(self):&#10;        &quot;&quot;&quot;Constraint: $100 for minors, $200 for majors&quot;&quot;&quot;&#10;        return 100.00 if self.is_minor else 200.00&#10;&#10;    def total_payments_for_year(self, year):&#10;        &quot;&quot;&quot;Calculate total payments for a specific year&quot;&quot;&quot;&#10;        return self.payment_set.filter(for_year=year).aggregate(&#10;            total=models.Sum('amount')&#10;        )['total'] or 0&#10;&#10;    def is_fees_paid_for_year(self, year):&#10;        &quot;&quot;&quot;Check if annual fees are fully paid for a year&quot;&quot;&quot;&#10;        return self.total_payments_for_year(year) &gt;= self.annual_fee&#10;&#10;&#10;class MinorMemberAssociation(models.Model):&#10;    &quot;&quot;&quot;&#10;    Links a minor club member to a family member and defines their relationship&#10;    &quot;&quot;&quot;&#10;    RELATIONSHIP_CHOICES = [&#10;        ('Father', 'Father'), ('Mother', 'Mother'), ('Grandfather', 'Grandfather'),&#10;        ('Grandmother', 'Grandmother'), ('Tutor', 'Tutor'), ('Partner', 'Partner'),&#10;        ('Friend', 'Friend'), ('Other', 'Other'),&#10;    ]&#10;    minor_member = models.ForeignKey(ClubMember, on_delete=models.CASCADE)&#10;    family_member = models.ForeignKey(FamilyMember, on_delete=models.CASCADE)&#10;    relationship = models.CharField(max_length=20, choices=RELATIONSHIP_CHOICES)&#10;    start_date = models.DateField()&#10;    end_date = models.DateField(null=True, blank=True)&#10;&#10;    def __str__(self):&#10;        return f&quot;{self.minor_member.first_name} ({self.relationship}) with {self.family_member.first_name}&quot;&#10;&#10;&#10;class Payment(models.Model):&#10;    &quot;&quot;&quot;&#10;    Records a payment made by a club member&#10;    &quot;&quot;&quot;&#10;    METHOD_CHOICES = [&#10;        ('Cash', 'Cash'),&#10;        ('Debit', 'Debit Card'),&#10;        ('Credit', 'Credit Card'),&#10;    ]&#10;    club_member = models.ForeignKey(ClubMember, on_delete=models.CASCADE)&#10;    payment_date = models.DateField()&#10;    amount = models.DecimalField(max_digits=10, decimal_places=2)&#10;    method_of_payment = models.CharField(max_length=10, choices=METHOD_CHOICES)&#10;    for_year = models.PositiveIntegerField()&#10;&#10;    def __str__(self):&#10;        return f&quot;Payment by {self.club_member} for year {self.for_year}&quot;&#10;&#10;&#10;class TeamFormation(models.Model):&#10;    &quot;&quot;&quot;&#10;    Represents a single team formation for a game or training session&#10;    &quot;&quot;&quot;&#10;    location = models.ForeignKey(Location, on_delete=models.CASCADE)&#10;    team_name = models.CharField(max_length=100)&#10;    head_coach = models.ForeignKey(Personnel, on_delete=models.CASCADE, related_name='coached_teams')&#10;    session_date = models.DateField()&#10;    start_time = models.TimeField()&#10;    session_address = models.CharField(max_length=255)&#10;    is_game = models.BooleanField(default=False)&#10;    score_team1 = models.PositiveIntegerField(null=True, blank=True)&#10;    score_team2 = models.PositiveIntegerField(null=True, blank=True)&#10;&#10;    def __str__(self):&#10;        session_type = &quot;Game&quot; if self.is_game else &quot;Training&quot;&#10;        return f&quot;{self.team_name} {session_type} on {self.session_date} at {self.start_time}&quot;&#10;&#10;&#10;class PlayerAssignment(models.Model):&#10;    &quot;&quot;&quot;&#10;    Links a club member to a team formation and assigns their role&#10;    &quot;&quot;&quot;&#10;    PLAYER_ROLES = [&#10;        ('Setter', 'Setter'),&#10;        ('Outside Hitter', 'Outside Hitter'),&#10;        ('Opposite Hitter', 'Opposite Hitter'),&#10;        ('Middle Blocker', 'Middle Blocker'),&#10;        ('Defensive Specialist', 'Defensive Specialist'),&#10;        ('Libero', 'Libero'),&#10;    ]&#10;    club_member = models.ForeignKey(ClubMember, on_delete=models.CASCADE)&#10;    team_formation = models.ForeignKey(TeamFormation, on_delete=models.CASCADE, related_name='players')&#10;    role = models.CharField(max_length=20, choices=PLAYER_ROLES)&#10;&#10;    class Meta:&#10;        # player can only be in a team once per formation&#10;        unique_together = ('club_member', 'team_formation')&#10;&#10;    def clean(self):&#10;        # Validate minimum age (11 years old)&#10;        if self.club_member.age &lt; 11:&#10;            raise ValidationError(&quot;Club member must be at least 11 years old.&quot;)&#10;&#10;        # Validate membership is active (fees paid for current year)&#10;        if not self.club_member.is_active:&#10;            raise ValidationError(&quot;Club member must have active membership to participate.&quot;)&#10;&#10;        # Validate same gender in team formation&#10;        team_members = PlayerAssignment.objects.filter(team_formation=self.team_formation).exclude(pk=self.pk)&#10;        if team_members.exists():&#10;            existing_gender = team_members.first().club_member.gender&#10;            if self.club_member.gender != existing_gender:&#10;                raise ValidationError(&quot;All players in the same team must be of the same gender.&quot;)&#10;&#10;        # Validate same location for all team members&#10;        if self.club_member.location != self.team_formation.location:&#10;            raise ValidationError(&quot;All players must be from the same location as the team formation.&quot;)&#10;&#10;        # Validate 3-hour gap between team formations on same day&#10;        same_day_assignments = PlayerAssignment.objects.filter(&#10;            club_member=self.club_member,&#10;            team_formation__session_date=self.team_formation.session_date&#10;        ).exclude(pk=self.pk)&#10;&#10;        for assignment in same_day_assignments:&#10;            time_diff = abs((self.team_formation.start_time.hour * 60 + self.team_formation.start_time.minute) -&#10;                          (assignment.team_formation.start_time.hour * 60 + assignment.team_formation.start_time.minute))&#10;            if time_diff &lt; 180:  # 3 hours = 180 minutes&#10;                raise ValidationError(&quot;At least 3 hours gap required between team formations on the same day.&quot;)&#10;&#10;    def save(self, *args, **kwargs):&#10;        self.clean()&#10;        super().save(*args, **kwargs)&#10;&#10;    def __str__(self):&#10;        return f&quot;{self.club_member.first_name} as {self.role} in {self.team_formation.team_name}&quot;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/mysql_tables_creation.sql">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/mysql_tables_creation.sql" />
              <option name="originalContent" value="CREATE DATABASE IF NOT EXISTS volleyball_club_db;&#10;USE volleyball_club_db;&#10;&#10;CREATE TABLE club_location (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    type ENUM('Head', 'Branch') NOT NULL,&#10;    name VARCHAR(255) UNIQUE NOT NULL,&#10;    address VARCHAR(255) NOT NULL,&#10;    city VARCHAR(100) NOT NULL,&#10;    province VARCHAR(100) NOT NULL,&#10;    postal_code VARCHAR(10) NOT NULL,&#10;    phone_number VARCHAR(20) NOT NULL,&#10;    web_address VARCHAR(200),&#10;    max_capacity INT UNSIGNED NOT NULL&#10;);&#10;&#10;CREATE TABLE club_hobby (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    name VARCHAR(50) UNIQUE NOT NULL&#10;);&#10;&#10;CREATE TABLE club_log (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    date DATETIME DEFAULT CURRENT_TIMESTAMP,&#10;    sender VARCHAR(255) NOT NULL,&#10;    receiver VARCHAR(254) NOT NULL,&#10;    subject VARCHAR(255) NOT NULL,&#10;    body_snippet TEXT&#10;);&#10;&#10;CREATE TABLE club_personnel (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    first_name VARCHAR(100) NOT NULL,&#10;    last_name VARCHAR(100) NOT NULL,&#10;    date_of_birth DATE NOT NULL,&#10;    social_security_number VARCHAR(20) UNIQUE NOT NULL,&#10;    medicare_card_number VARCHAR(20) UNIQUE NOT NULL,&#10;    telephone_number VARCHAR(20) NOT NULL,&#10;    address VARCHAR(255) NOT NULL,&#10;    city VARCHAR(100) NOT NULL,&#10;    province VARCHAR(100) NOT NULL,&#10;    postal_code VARCHAR(10) NOT NULL,&#10;    email_address VARCHAR(254) UNIQUE NOT NULL&#10;);&#10;&#10;CREATE TABLE club_personnelassignment (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    personnel_id INT NOT NULL,&#10;    location_id INT NOT NULL,&#10;    role ENUM('Administrator', 'General Manager', 'Deputy Manager', 'Treasurer', 'Secretary', 'Captain', 'Coach', 'Assistant Coach', 'Other') NOT NULL,&#10;    mandate ENUM('Volunteer', 'Salaried') NOT NULL,&#10;    start_date DATE NOT NULL,&#10;    end_date DATE NULL,&#10;    FOREIGN KEY (personnel_id) REFERENCES club_personnel (id) ON DELETE CASCADE,&#10;    FOREIGN KEY (location_id) REFERENCES club_location (id) ON DELETE CASCADE,&#10;    CONSTRAINT valid_date_range CHECK (end_date IS NULL OR end_date &gt;= start_date),&#10;    UNIQUE KEY unique_personnel_start_date (personnel_id, start_date) -- BCNF compliance&#10;);&#10;&#10;CREATE TABLE club_familymember (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    first_name VARCHAR(100) NOT NULL,&#10;    last_name VARCHAR(100) NOT NULL,&#10;    date_of_birth DATE NOT NULL,&#10;    social_security_number VARCHAR(20) UNIQUE NOT NULL,&#10;    medicare_card_number VARCHAR(20) UNIQUE NOT NULL,&#10;    telephone_number VARCHAR(20) NOT NULL,&#10;    address VARCHAR(255) NOT NULL,&#10;    city VARCHAR(100) NOT NULL,&#10;    province VARCHAR(100) NOT NULL,&#10;    postal_code VARCHAR(10) NOT NULL,&#10;    email_address VARCHAR(254) UNIQUE NOT NULL,&#10;    location_id INT NULL,&#10;    FOREIGN KEY (location_id) REFERENCES club_location (id) ON DELETE SET NULL&#10;);&#10;&#10;CREATE TABLE club_secondaryfamilymember (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    primary_family_member_id INT NOT NULL,&#10;    first_name VARCHAR(100) NOT NULL,&#10;    last_name VARCHAR(100) NOT NULL,&#10;    telephone_number VARCHAR(20) NOT NULL,&#10;    relationship VARCHAR(50) NOT NULL,&#10;    FOREIGN KEY (primary_family_member_id) REFERENCES club_familymember (id) ON DELETE CASCADE&#10;);&#10;&#10;CREATE TABLE club_clubmember (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    membership_number CHAR(36) UNIQUE NOT NULL,&#10;    first_name VARCHAR(100) NOT NULL,&#10;    last_name VARCHAR(100) NOT NULL,&#10;    date_of_birth DATE NOT NULL,&#10;    social_security_number VARCHAR(20) UNIQUE NOT NULL,&#10;    medicare_card_number VARCHAR(20) UNIQUE NOT NULL,&#10;    telephone_number VARCHAR(20) NOT NULL,&#10;    address VARCHAR(255) NOT NULL,&#10;    city VARCHAR(100) NOT NULL,&#10;    province VARCHAR(100) NOT NULL,&#10;    postal_code VARCHAR(10) NOT NULL,&#10;    email_address VARCHAR(254) UNIQUE NOT NULL,&#10;    height DECIMAL(5,2) NOT NULL,&#10;    weight DECIMAL(5,2) NOT NULL,&#10;    location_id INT NULL,&#10;    date_joined DATE DEFAULT (CURRENT_DATE),&#10;    gender ENUM('M', 'F') DEFAULT 'M',&#10;    FOREIGN KEY (location_id) REFERENCES club_location(id) ON DELETE SET NULL&#10;);&#10;&#10;CREATE TABLE club_clubmember_hobbies (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    clubmember_id INT NOT NULL,&#10;    hobby_id INT NOT NULL,&#10;    FOREIGN KEY (clubmember_id) REFERENCES club_clubmember (id) ON DELETE CASCADE,&#10;    FOREIGN KEY (hobby_id) REFERENCES club_hobby (id) ON DELETE CASCADE,&#10;    UNIQUE KEY unique_member_hobby (clubmember_id, hobby_id)&#10;);&#10;&#10;CREATE TABLE club_minormemberassociation (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    minor_member_id INT NOT NULL,&#10;    family_member_id INT NOT NULL,&#10;    relationship ENUM('Father', 'Mother', 'Grand-father', 'Grand-mother', 'Tutor', 'Partner', 'Friend', 'Other') NOT NULL,&#10;    start_date DATE NOT NULL,&#10;    end_date DATE NULL,&#10;    FOREIGN KEY (minor_member_id) REFERENCES club_clubmember (id) ON DELETE CASCADE,&#10;    FOREIGN KEY (family_member_id) REFERENCES club_familymember (id) ON DELETE CASCADE,&#10;    UNIQUE KEY unique_minor_start_date (minor_member_id, start_date) -- BCNF compliance&#10;);&#10;&#10;CREATE TABLE club_payment (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    club_member_id INT NOT NULL,&#10;    payment_date DATE NOT NULL,&#10;    amount DECIMAL(10 , 2 ) NOT NULL,&#10;    method_of_payment ENUM('Cash', 'Debit', 'Credit') NOT NULL,&#10;    for_year INT UNSIGNED NOT NULL,&#10;    FOREIGN KEY (club_member_id) REFERENCES club_clubmember (id) ON DELETE CASCADE&#10;);&#10;&#10;CREATE TABLE club_teamformation (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    location_id INT NOT NULL,&#10;    team_name VARCHAR(100) NOT NULL,&#10;    head_coach_id INT NOT NULL,&#10;    session_date DATE NOT NULL,&#10;    start_time TIME NOT NULL,&#10;    is_game BOOLEAN DEFAULT FALSE,&#10;    score_team1 INT UNSIGNED NULL,&#10;    score_team2 INT UNSIGNED NULL,&#10;    FOREIGN KEY (location_id) REFERENCES club_location (id) ON DELETE CASCADE,&#10;    FOREIGN KEY (head_coach_id) REFERENCES club_personnel (id) ON DELETE CASCADE&#10;);&#10;&#10;CREATE TABLE club_playerassignment (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    club_member_id INT NOT NULL,&#10;    team_formation_id INT NOT NULL,&#10;    role ENUM('Setter', 'Outside Hitter', 'Opposite Hitter', 'Middle Blocker', 'Defensive Specialist', 'Libero') NOT NULL,&#10;    FOREIGN KEY (club_member_id) REFERENCES club_clubmember (id) ON DELETE CASCADE,&#10;    FOREIGN KEY (team_formation_id) REFERENCES club_teamformation (id) ON DELETE CASCADE,&#10;    UNIQUE KEY unique_member_formation (club_member_id, team_formation_id)&#10;);&#10;&#10;-- trigger for age validation&#10;DELIMITER $$&#10;&#10;CREATE TRIGGER check_member_age_before_insert&#10;    BEFORE INSERT ON club_clubmember&#10;    FOR EACH ROW&#10;BEGIN&#10;    DECLARE member_age INT;&#10;    SET member_age = TIMESTAMPDIFF(YEAR, NEW.date_of_birth, CURDATE());&#10;&#10;    IF member_age &lt; 11 THEN&#10;        SIGNAL SQLSTATE '45000'&#10;        SET MESSAGE_TEXT = 'Club member must be at least 11 years old to register.';&#10;    END IF;&#10;END$$&#10;&#10;CREATE TRIGGER check_member_age_before_update&#10;    BEFORE UPDATE ON club_clubmember&#10;    FOR EACH ROW&#10;BEGIN&#10;    DECLARE member_age INT;&#10;&#10;    -- if only date_of_birth is changed&#10;    IF NEW.date_of_birth != OLD.date_of_birth THEN&#10;        SET member_age = TIMESTAMPDIFF(YEAR, NEW.date_of_birth, CURDATE());&#10;&#10;        IF member_age &lt; 11 THEN&#10;            SIGNAL SQLSTATE '45000'&#10;            SET MESSAGE_TEXT = 'Club member must be at least 11 years old.';&#10;        END IF;&#10;    END IF;&#10;END$$&#10;&#10;-- Trigger to prevent overlapping personnel assignments (BCNF business rule)&#10;CREATE TRIGGER enforce_no_overlap_personnel_bcnf&#10;    BEFORE INSERT ON club_personnelassignment&#10;    FOR EACH ROW&#10;BEGIN&#10;    DECLARE overlap_count INT DEFAULT 0;&#10;&#10;    SELECT COUNT(*) INTO overlap_count&#10;    FROM club_personnelassignment&#10;    WHERE personnel_id = NEW.personnel_id&#10;    AND (&#10;        (NEW.start_date BETWEEN start_date AND COALESCE(end_date, '9999-12-31'))&#10;        OR&#10;        (COALESCE(NEW.end_date, '9999-12-31') BETWEEN start_date AND COALESCE(end_date, '9999-12-31'))&#10;        OR&#10;        (NEW.start_date &lt;= start_date AND COALESCE(NEW.end_date, '9999-12-31') &gt;= COALESCE(end_date, '9999-12-31'))&#10;    );&#10;&#10;    IF overlap_count &gt; 0 THEN&#10;        SIGNAL SQLSTATE '45000'&#10;        SET MESSAGE_TEXT = 'BCNF Violation: Personnel cannot have overlapping assignments';&#10;    END IF;&#10;END$$&#10;&#10;DELIMITER ;&#10;&#10;-- Sample data for hobbies&#10;INSERT INTO club_hobby (name) VALUES&#10;('Volleyball'),&#10;('Soccer'),&#10;('Tennis'),&#10;('Ping Pong'),&#10;('Swimming'),&#10;('Hockey'),&#10;('Golf'),&#10;('Basketball'),&#10;('Running'),&#10;('Cycling');&#10;&#10;-- Sample location&#10;INSERT INTO club_location (type, name, address, city, province, postal_code, phone_number, web_address, max_capacity) VALUES&#10;('Head', 'Montreal Main Club', '123 Main Street', 'Montreal', 'Quebec', 'H1A 1A1', '514-555-0100', 'http://www.montrealvolleyball.com', 200),&#10;('Branch', 'Laval Branch', '456 Branch Road', 'Laval', 'Quebec', 'H7A 1B1', '450-555-0200', NULL, 150);&#10;&#10;-- Create a view to calculate membership status dynamically&#10;CREATE VIEW club_member_status AS&#10;SELECT&#10;    cm.*,&#10;    CASE&#10;        WHEN TIMESTAMPDIFF(YEAR, cm.date_of_birth, CURDATE()) &lt; 18 THEN 100.00&#10;        ELSE 200.00&#10;    END as annual_fee,&#10;    COALESCE(SUM(p.amount), 0) as total_paid_current_year,&#10;    CASE&#10;        WHEN COALESCE(SUM(p.amount), 0) &gt;=&#10;             CASE WHEN TIMESTAMPDIFF(YEAR, cm.date_of_birth, CURDATE()) &lt; 18&#10;                  THEN 100.00 ELSE 200.00 END&#10;        THEN TRUE&#10;        ELSE FALSE&#10;    END as is_active,&#10;    CASE&#10;        WHEN TIMESTAMPDIFF(YEAR, cm.date_of_birth, CURDATE()) &lt; 18 THEN 'Minor'&#10;        ELSE 'Major'&#10;    END as member_type&#10;FROM club_clubmember cm&#10;LEFT JOIN club_payment p ON cm.id = p.club_member_id&#10;                          AND p.for_year = YEAR(CURDATE())&#10;GROUP BY cm.id, cm.membership_number, cm.first_name, cm.last_name,&#10;         cm.date_of_birth, cm.social_security_number, cm.medicare_card_number,&#10;         cm.telephone_number, cm.address, cm.city, cm.province, cm.postal_code,&#10;         cm.email_address, cm.height, cm.weight, cm.location_id, cm.date_joined, cm.gender;&#10;&#10;&#10;-- Option 2: Keep surrogate keys but add unique constraints to enforce BCNF&#10;ALTER TABLE club_personnelassignment&#10;ADD CONSTRAINT unique_personnel_start_date UNIQUE (personnel_id, start_date);&#10;&#10;ALTER TABLE club_minormemberassociation&#10;ADD CONSTRAINT unique_minor_start_date UNIQUE (minor_member_id, start_date);&#10;" />
              <option name="updatedContent" value="CREATE DATABASE IF NOT EXISTS volleyball_club_db;&#10;USE volleyball_club_db;&#10;&#10;CREATE TABLE club_location (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    type ENUM('Head', 'Branch') NOT NULL,&#10;    name VARCHAR(255) UNIQUE NOT NULL,&#10;    address VARCHAR(255) NOT NULL,&#10;    city VARCHAR(100) NOT NULL,&#10;    province VARCHAR(100) NOT NULL,&#10;    postal_code VARCHAR(10) NOT NULL,&#10;    phone_number VARCHAR(20) NOT NULL,&#10;    web_address VARCHAR(200),&#10;    max_capacity INT UNSIGNED NOT NULL&#10;);&#10;&#10;CREATE TABLE club_hobby (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    name VARCHAR(50) UNIQUE NOT NULL&#10;);&#10;&#10;CREATE TABLE club_log (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    date DATETIME DEFAULT CURRENT_TIMESTAMP,&#10;    sender VARCHAR(255) NOT NULL,&#10;    receiver VARCHAR(254) NOT NULL,&#10;    subject VARCHAR(255) NOT NULL,&#10;    body_snippet TEXT&#10;);&#10;&#10;CREATE TABLE club_personnel (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    first_name VARCHAR(100) NOT NULL,&#10;    last_name VARCHAR(100) NOT NULL,&#10;    date_of_birth DATE NOT NULL,&#10;    social_security_number VARCHAR(20) UNIQUE NOT NULL,&#10;    medicare_card_number VARCHAR(20) UNIQUE NOT NULL,&#10;    telephone_number VARCHAR(20) NOT NULL,&#10;    address VARCHAR(255) NOT NULL,&#10;    city VARCHAR(100) NOT NULL,&#10;    province VARCHAR(100) NOT NULL,&#10;    postal_code VARCHAR(10) NOT NULL,&#10;    email_address VARCHAR(254) UNIQUE NOT NULL&#10;);&#10;&#10;CREATE TABLE club_personnelassignment (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    personnel_id INT NOT NULL,&#10;    location_id INT NOT NULL,&#10;    role ENUM('Administrator', 'General Manager', 'Deputy Manager', 'Treasurer', 'Secretary', 'Captain', 'Coach', 'Assistant Coach', 'Other') NOT NULL,&#10;    mandate ENUM('Volunteer', 'Salaried') NOT NULL,&#10;    start_date DATE NOT NULL,&#10;    end_date DATE NULL,&#10;    FOREIGN KEY (personnel_id) REFERENCES club_personnel (id) ON DELETE CASCADE,&#10;    FOREIGN KEY (location_id) REFERENCES club_location (id) ON DELETE CASCADE,&#10;    CONSTRAINT valid_date_range CHECK (end_date IS NULL OR end_date &gt;= start_date),&#10;    UNIQUE KEY unique_personnel_start_date (personnel_id, start_date) -- BCNF compliance&#10;);&#10;&#10;CREATE TABLE club_familymember (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    first_name VARCHAR(100) NOT NULL,&#10;    last_name VARCHAR(100) NOT NULL,&#10;    date_of_birth DATE NOT NULL,&#10;    social_security_number VARCHAR(20) UNIQUE NOT NULL,&#10;    medicare_card_number VARCHAR(20) UNIQUE NOT NULL,&#10;    telephone_number VARCHAR(20) NOT NULL,&#10;    address VARCHAR(255) NOT NULL,&#10;    city VARCHAR(100) NOT NULL,&#10;    province VARCHAR(100) NOT NULL,&#10;    postal_code VARCHAR(10) NOT NULL,&#10;    email_address VARCHAR(254) UNIQUE NOT NULL,&#10;    location_id INT NULL,&#10;    FOREIGN KEY (location_id) REFERENCES club_location (id) ON DELETE SET NULL&#10;);&#10;&#10;CREATE TABLE club_secondaryfamilymember (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    primary_family_member_id INT NOT NULL,&#10;    first_name VARCHAR(100) NOT NULL,&#10;    last_name VARCHAR(100) NOT NULL,&#10;    telephone_number VARCHAR(20) NOT NULL,&#10;    relationship VARCHAR(50) NOT NULL,&#10;    FOREIGN KEY (primary_family_member_id) REFERENCES club_familymember (id) ON DELETE CASCADE&#10;);&#10;&#10;CREATE TABLE club_clubmember (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    membership_number CHAR(36) UNIQUE NOT NULL,&#10;    first_name VARCHAR(100) NOT NULL,&#10;    last_name VARCHAR(100) NOT NULL,&#10;    date_of_birth DATE NOT NULL,&#10;    social_security_number VARCHAR(20) UNIQUE NOT NULL,&#10;    medicare_card_number VARCHAR(20) UNIQUE NOT NULL,&#10;    telephone_number VARCHAR(20) NOT NULL,&#10;    address VARCHAR(255) NOT NULL,&#10;    city VARCHAR(100) NOT NULL,&#10;    province VARCHAR(100) NOT NULL,&#10;    postal_code VARCHAR(10) NOT NULL,&#10;    email_address VARCHAR(254) UNIQUE NOT NULL,&#10;    height DECIMAL(5,2) NOT NULL,&#10;    weight DECIMAL(5,2) NOT NULL,&#10;    location_id INT NULL,&#10;    date_joined DATE DEFAULT (CURRENT_DATE),&#10;    gender ENUM('M', 'F') DEFAULT 'M',&#10;    FOREIGN KEY (location_id) REFERENCES club_location(id) ON DELETE SET NULL&#10;);&#10;&#10;CREATE TABLE club_clubmember_hobbies (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    clubmember_id INT NOT NULL,&#10;    hobby_id INT NOT NULL,&#10;    FOREIGN KEY (clubmember_id) REFERENCES club_clubmember (id) ON DELETE CASCADE,&#10;    FOREIGN KEY (hobby_id) REFERENCES club_hobby (id) ON DELETE CASCADE,&#10;    UNIQUE KEY unique_member_hobby (clubmember_id, hobby_id)&#10;);&#10;&#10;CREATE TABLE club_minormemberassociation (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    minor_member_id INT NOT NULL,&#10;    family_member_id INT NOT NULL,&#10;    relationship ENUM('Father', 'Mother', 'Grand-father', 'Grand-mother', 'Tutor', 'Partner', 'Friend', 'Other') NOT NULL,&#10;    start_date DATE NOT NULL,&#10;    end_date DATE NULL,&#10;    FOREIGN KEY (minor_member_id) REFERENCES club_clubmember (id) ON DELETE CASCADE,&#10;    FOREIGN KEY (family_member_id) REFERENCES club_familymember (id) ON DELETE CASCADE,&#10;    UNIQUE KEY unique_minor_start_date (minor_member_id, start_date) -- BCNF compliance&#10;);&#10;&#10;CREATE TABLE club_payment (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    club_member_id INT NOT NULL,&#10;    payment_date DATE NOT NULL,&#10;    amount DECIMAL(10 , 2 ) NOT NULL,&#10;    method_of_payment ENUM('Cash', 'Debit', 'Credit') NOT NULL,&#10;    for_year INT UNSIGNED NOT NULL,&#10;    FOREIGN KEY (club_member_id) REFERENCES club_clubmember (id) ON DELETE CASCADE&#10;);&#10;&#10;CREATE TABLE club_teamformation (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    location_id INT NOT NULL,&#10;    team_name VARCHAR(100) NOT NULL,&#10;    head_coach_id INT NOT NULL,&#10;    session_date DATE NOT NULL,&#10;    start_time TIME NOT NULL,&#10;    is_game BOOLEAN DEFAULT FALSE,&#10;    score_team1 INT UNSIGNED NULL,&#10;    score_team2 INT UNSIGNED NULL,&#10;    FOREIGN KEY (location_id) REFERENCES club_location (id) ON DELETE CASCADE,&#10;    FOREIGN KEY (head_coach_id) REFERENCES club_personnel (id) ON DELETE CASCADE&#10;);&#10;&#10;CREATE TABLE club_playerassignment (&#10;    id INT AUTO_INCREMENT PRIMARY KEY,&#10;    club_member_id INT NOT NULL,&#10;    team_formation_id INT NOT NULL,&#10;    role ENUM('Setter', 'Outside Hitter', 'Opposite Hitter', 'Middle Blocker', 'Defensive Specialist', 'Libero') NOT NULL,&#10;    FOREIGN KEY (club_member_id) REFERENCES club_clubmember (id) ON DELETE CASCADE,&#10;    FOREIGN KEY (team_formation_id) REFERENCES club_teamformation (id) ON DELETE CASCADE,&#10;    UNIQUE KEY unique_member_formation (club_member_id, team_formation_id)&#10;);&#10;&#10;-- trigger for age validation&#10;DELIMITER $$&#10;&#10;CREATE TRIGGER check_member_age_before_insert&#10;    BEFORE INSERT ON club_clubmember&#10;    FOR EACH ROW&#10;BEGIN&#10;    DECLARE member_age INT;&#10;    SET member_age = TIMESTAMPDIFF(YEAR, NEW.date_of_birth, CURDATE());&#10;&#10;    IF member_age &lt; 11 THEN&#10;        SIGNAL SQLSTATE '45000'&#10;        SET MESSAGE_TEXT = 'Club member must be at least 11 years old to register.';&#10;    END IF;&#10;END$$&#10;&#10;CREATE TRIGGER check_member_age_before_update&#10;    BEFORE UPDATE ON club_clubmember&#10;    FOR EACH ROW&#10;BEGIN&#10;    DECLARE member_age INT;&#10;&#10;    -- if only date_of_birth is changed&#10;    IF NEW.date_of_birth != OLD.date_of_birth THEN&#10;        SET member_age = TIMESTAMPDIFF(YEAR, NEW.date_of_birth, CURDATE());&#10;&#10;        IF member_age &lt; 11 THEN&#10;            SIGNAL SQLSTATE '45000'&#10;            SET MESSAGE_TEXT = 'Club member must be at least 11 years old.';&#10;        END IF;&#10;    END IF;&#10;END$$&#10;&#10;-- Trigger to prevent overlapping personnel assignments (BCNF business rule)&#10;CREATE TRIGGER enforce_no_overlap_personnel_bcnf&#10;    BEFORE INSERT ON club_personnelassignment&#10;    FOR EACH ROW&#10;BEGIN&#10;    DECLARE overlap_count INT DEFAULT 0;&#10;&#10;    SELECT COUNT(*) INTO overlap_count&#10;    FROM club_personnelassignment&#10;    WHERE personnel_id = NEW.personnel_id&#10;    AND (&#10;        (NEW.start_date BETWEEN start_date AND COALESCE(end_date, '9999-12-31'))&#10;        OR&#10;        (COALESCE(NEW.end_date, '9999-12-31') BETWEEN start_date AND COALESCE(end_date, '9999-12-31'))&#10;        OR&#10;        (NEW.start_date &lt;= start_date AND COALESCE(NEW.end_date, '9999-12-31') &gt;= COALESCE(end_date, '9999-12-31'))&#10;    );&#10;&#10;    IF overlap_count &gt; 0 THEN&#10;        SIGNAL SQLSTATE '45000'&#10;        SET MESSAGE_TEXT = 'BCNF Violation: Personnel cannot have overlapping assignments';&#10;    END IF;&#10;END$$&#10;&#10;DELIMITER ;&#10;&#10;-- Sample data for hobbies&#10;INSERT INTO club_hobby (name) VALUES&#10;('Volleyball'),&#10;('Soccer'),&#10;('Tennis'),&#10;('Ping Pong'),&#10;('Swimming'),&#10;('Hockey'),&#10;('Golf'),&#10;('Basketball'),&#10;('Running'),&#10;('Cycling');&#10;&#10;-- Sample location&#10;INSERT INTO club_location (type, name, address, city, province, postal_code, phone_number, web_address, max_capacity) VALUES&#10;('Head', 'Montreal Main Club', '123 Main Street', 'Montreal', 'Quebec', 'H1A 1A1', '514-555-0100', 'http://www.montrealvolleyball.com', 200),&#10;('Branch', 'Laval Branch', '456 Branch Road', 'Laval', 'Quebec', 'H7A 1B1', '450-555-0200', NULL, 150);&#10;&#10;-- Create a view to calculate membership status dynamically&#10;CREATE VIEW club_member_status AS&#10;SELECT&#10;    cm.*,&#10;    CASE&#10;        WHEN TIMESTAMPDIFF(YEAR, cm.date_of_birth, CURDATE()) &lt; 18 THEN 100.00&#10;        ELSE 200.00&#10;    END as annual_fee,&#10;    COALESCE(SUM(p.amount), 0) as total_paid_current_year,&#10;    CASE&#10;        WHEN COALESCE(SUM(p.amount), 0) &gt;=&#10;             CASE WHEN TIMESTAMPDIFF(YEAR, cm.date_of_birth, CURDATE()) &lt; 18&#10;                  THEN 100.00 ELSE 200.00 END&#10;        THEN TRUE&#10;        ELSE FALSE&#10;    END as is_active,&#10;    CASE&#10;        WHEN TIMESTAMPDIFF(YEAR, cm.date_of_birth, CURDATE()) &lt; 18 THEN 'Minor'&#10;        ELSE 'Major'&#10;    END as member_type&#10;FROM club_clubmember cm&#10;LEFT JOIN club_payment p ON cm.id = p.club_member_id&#10;                          AND p.for_year = YEAR(CURDATE())&#10;GROUP BY cm.id, cm.membership_number, cm.first_name, cm.last_name,&#10;         cm.date_of_birth, cm.social_security_number, cm.medicare_card_number,&#10;         cm.telephone_number, cm.address, cm.city, cm.province, cm.postal_code,&#10;         cm.email_address, cm.height, cm.weight, cm.location_id, cm.date_joined, cm.gender;&#10;&#10;&#10;-- Option 2: Keep surrogate keys but add unique constraints to enforce BCNF&#10;ALTER TABLE club_personnelassignment&#10;ADD CONSTRAINT unique_personnel_start_date UNIQUE (personnel_id, start_date);&#10;&#10;ALTER TABLE club_minormemberassociation&#10;ADD CONSTRAINT unique_minor_start_date UNIQUE (minor_member_id, start_date);&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/club_member_confirm_delete.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/club_member_confirm_delete.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Delete Club Member - MVC System&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Delete Club Member&lt;/h1&gt;&#10;&#10;    &lt;p&gt;Are you sure you want to delete &lt;strong&gt;{{ member.first_name }} {{ member.last_name }}&lt;/strong&gt; (Membership #{{ member.membership_number }})?&lt;/p&gt;&#10;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;        &lt;button type=&quot;submit&quot; style=&quot;background: red; color: white; padding: 8px 16px;&quot;&gt;Yes, delete&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'club_member_detail' member.pk %}&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#13;&#10;&lt;html lang=&quot;en&quot;&gt;&#13;&#10;&lt;head&gt;&#13;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#13;&#10;    &lt;title&gt;Delete Club Member - MVC System&lt;/title&gt;&#13;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#13;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#13;&#10;&lt;/head&gt;&#13;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#13;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Delete Club Member&lt;/h1&gt;&#13;&#10;    &lt;div class=&quot;alert alert-danger&quot;&gt;&#13;&#10;        &lt;p&gt;Are you sure you want to delete &lt;strong&gt;{{ member.first_name }} {{ member.last_name }}&lt;/strong&gt; (Membership #{{ member.membership_number }})?&lt;/p&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;    &lt;form method=&quot;post&quot;&gt;&#13;&#10;        {% csrf_token %}&#13;&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger&quot;&gt;Yes, delete&lt;/button&gt;&#13;&#10;        &lt;a href=&quot;{% url 'club_member_detail' member.pk %}&quot; class=&quot;btn btn-secondary&quot;&gt;Cancel&lt;/a&gt;&#13;&#10;    &lt;/form&gt;&#13;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#13;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#13;&#10;&lt;/body&gt;&#13;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/club_member_detail.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/club_member_detail.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Club Member Details - MVC System&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Club Member Details&lt;/h1&gt;&#10;&#10;    &lt;table border=&quot;1&quot; style=&quot;border-collapse: collapse; width: 100%;&quot;&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Membership Number:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.membership_number }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Name:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.first_name }} {{ member.last_name }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Age:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ age }} ({% if is_minor %}Minor{% else %}Major{% endif %})&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Date of Birth:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.date_of_birth }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Email:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.email_address }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Phone:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.telephone_number }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Address:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.address }}, {{ member.city }}, {{ member.province }} {{ member.postal_code }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Height:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.height }} cm&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Weight:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.weight }} kg&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Location:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.location.name|default:&quot;No Location&quot; }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Date Joined:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.date_joined }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;SSN:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.social_security_number }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Medicare:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.medicare_card_number }}&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;h3&gt;Hobbies&lt;/h3&gt;&#10;    &lt;ul&gt;&#10;        {% for hobby in member.hobbies.all %}&#10;            &lt;li&gt;{{ hobby.name }}&lt;/li&gt;&#10;        {% empty %}&#10;            &lt;li&gt;No hobbies listed&lt;/li&gt;&#10;        {% endfor %}&#10;    &lt;/ul&gt;&#10;&#10;    &lt;h3&gt;Family Associations&lt;/h3&gt;&#10;    &lt;table border=&quot;1&quot; style=&quot;width: 100%; border-collapse: collapse; margin-top: 10px;&quot;&gt;&#10;        &lt;thead&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;Family Member&lt;/th&gt;&#10;                &lt;th&gt;Relationship&lt;/th&gt;&#10;                &lt;th&gt;Start Date&lt;/th&gt;&#10;                &lt;th&gt;End Date&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for association in family_associations %}&#10;                &lt;tr&gt;&#10;                    &lt;td&gt;{{ association.family_member.first_name }} {{ association.family_member.last_name }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ association.relationship }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ association.start_date }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ association.end_date|default:&quot;Active&quot; }}&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% empty %}&#10;                &lt;tr&gt;&#10;                    &lt;td colspan=&quot;4&quot;&gt;No family associations.&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;h3&gt;Payment History&lt;/h3&gt;&#10;    &lt;table border=&quot;1&quot; style=&quot;width: 100%; border-collapse: collapse; margin-top: 10px;&quot;&gt;&#10;        &lt;thead&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;Payment Date&lt;/th&gt;&#10;                &lt;th&gt;Amount&lt;/th&gt;&#10;                &lt;th&gt;Method&lt;/th&gt;&#10;                &lt;th&gt;For Year&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for payment in payments %}&#10;                &lt;tr&gt;&#10;                    &lt;td&gt;{{ payment.payment_date }}&lt;/td&gt;&#10;                    &lt;td&gt;${{ payment.amount }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ payment.method_of_payment }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ payment.for_year }}&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% empty %}&#10;                &lt;tr&gt;&#10;                    &lt;td colspan=&quot;4&quot;&gt;No payments recorded.&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;h3&gt;Team Assignments&lt;/h3&gt;&#10;    &lt;table border=&quot;1&quot; style=&quot;width: 100%; border-collapse: collapse; margin-top: 10px;&quot;&gt;&#10;        &lt;thead&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;Team&lt;/th&gt;&#10;                &lt;th&gt;Role&lt;/th&gt;&#10;                &lt;th&gt;Session Date&lt;/th&gt;&#10;                &lt;th&gt;Session Type&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for assignment in team_assignments %}&#10;                &lt;tr&gt;&#10;                    &lt;td&gt;{{ assignment.team_formation.team_name }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ assignment.role }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ assignment.team_formation.session_date }}&lt;/td&gt;&#10;                    &lt;td&gt;{% if assignment.team_formation.is_game %}Game{% else %}Training{% endif %}&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% empty %}&#10;                &lt;tr&gt;&#10;                    &lt;td colspan=&quot;4&quot;&gt;No team assignments.&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;br&gt;&#10;    &lt;a href=&quot;{% url 'club_member_edit' member.pk %}&quot;&gt;Edit&lt;/a&gt; |&#10;    &lt;a href=&quot;{% url 'club_member_delete' member.pk %}&quot; style=&quot;color: red;&quot;&gt;Delete&lt;/a&gt; |&#10;    &lt;a href=&quot;{% url 'club_member_list' %}&quot;&gt;Back to list&lt;/a&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Club Member Details - MVC System&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Club Member Details&lt;/h1&gt;&#10;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Membership Number:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.membership_number }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Name:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.first_name }} {{ member.last_name }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Age:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ age }} ({% if is_minor %}Minor{% else %}Major{% endif %})&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Date of Birth:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.date_of_birth }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Email:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.email_address }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Phone:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.telephone_number }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Address:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.address }}, {{ member.city }}, {{ member.province }} {{ member.postal_code }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Height:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.height }} cm&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Weight:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.weight }} kg&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Location:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.location.name|default:&quot;No Location&quot; }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Date Joined:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.date_joined }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;SSN:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.social_security_number }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Medicare:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ member.medicare_card_number }}&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;h3&gt;Hobbies&lt;/h3&gt;&#10;    &lt;ul class=&quot;list-group&quot;&gt;&#10;        {% for hobby in member.hobbies.all %}&#10;            &lt;li class=&quot;list-group-item&quot;&gt;{{ hobby.name }}&lt;/li&gt;&#10;        {% empty %}&#10;            &lt;li class=&quot;list-group-item&quot;&gt;No hobbies listed&lt;/li&gt;&#10;        {% endfor %}&#10;    &lt;/ul&gt;&#10;&#10;    &lt;h3&gt;Family Associations&lt;/h3&gt;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#10;        &lt;thead class=&quot;table-dark&quot;&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;Family Member&lt;/th&gt;&#10;                &lt;th&gt;Relationship&lt;/th&gt;&#10;                &lt;th&gt;Start Date&lt;/th&gt;&#10;                &lt;th&gt;End Date&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for association in family_associations %}&#10;                &lt;tr&gt;&#10;                    &lt;td&gt;{{ association.family_member.first_name }} {{ association.family_member.last_name }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ association.relationship }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ association.start_date }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ association.end_date|default:&quot;Active&quot; }}&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% empty %}&#10;                &lt;tr&gt;&#10;                    &lt;td colspan=&quot;4&quot;&gt;No family associations.&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;h3&gt;Payment History&lt;/h3&gt;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#10;        &lt;thead class=&quot;table-dark&quot;&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;Payment Date&lt;/th&gt;&#10;                &lt;th&gt;Amount&lt;/th&gt;&#10;                &lt;th&gt;Method&lt;/th&gt;&#10;                &lt;th&gt;For Year&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for payment in payments %}&#10;                &lt;tr&gt;&#10;                    &lt;td&gt;{{ payment.payment_date }}&lt;/td&gt;&#10;                    &lt;td&gt;${{ payment.amount }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ payment.method_of_payment }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ payment.for_year }}&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% empty %}&#10;                &lt;tr&gt;&#10;                    &lt;td colspan=&quot;4&quot;&gt;No payments recorded.&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;h3&gt;Team Assignments&lt;/h3&gt;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#10;        &lt;thead class=&quot;table-dark&quot;&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;Team&lt;/th&gt;&#10;                &lt;th&gt;Role&lt;/th&gt;&#10;                &lt;th&gt;Session Date&lt;/th&gt;&#10;                &lt;th&gt;Session Type&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for assignment in team_assignments %}&#10;                &lt;tr&gt;&#10;                    &lt;td&gt;{{ assignment.team_formation.team_name }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ assignment.role }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ assignment.team_formation.session_date }}&lt;/td&gt;&#10;                    &lt;td&gt;{% if assignment.team_formation.is_game %}Game{% else %}Training{% endif %}&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% empty %}&#10;                &lt;tr&gt;&#10;                    &lt;td colspan=&quot;4&quot;&gt;No team assignments.&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;br&gt;&#10;    &lt;a href=&quot;{% url 'club_member_edit' member.pk %}&quot; class=&quot;btn btn-primary&quot;&gt;Edit&lt;/a&gt;&#10;    &lt;a href=&quot;{% url 'club_member_delete' member.pk %}&quot; class=&quot;btn btn-danger&quot;&gt;Delete&lt;/a&gt;&#10;    &lt;a href=&quot;{% url 'club_member_list' %}&quot; class=&quot;btn btn-secondary&quot;&gt;Back to list&lt;/a&gt;&#10;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/club_member_form.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/club_member_form.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;{{ action }} Club Member - MVC System&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;{{ action }} Club Member&lt;/h1&gt;&#10;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;        &lt;table&gt;&#10;            {{ form.as_table }}&#10;        &lt;/table&gt;&#10;        &lt;br&gt;&#10;        &lt;button type=&quot;submit&quot;&gt;{{ action }} club member&lt;/button&gt;&#10;        &lt;a href=&quot;{% if member %}{% url 'club_member_detail' member.pk %}{% else %}{% url 'club_member_list' %}{% endif %}&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;{{ action }} Club Member - MVC System&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;{{ action }} Club Member&lt;/h1&gt;&#10;&#10;    &lt;form method=&quot;post&quot; class=&quot;needs-validation&quot; novalidate&gt;&#10;        {% csrf_token %}&#10;        &lt;table class=&quot;table&quot;&gt;&#10;            {{ form.as_table }}&#10;        &lt;/table&gt;&#10;        &lt;br&gt;&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;{{ action }} club member&lt;/button&gt;&#10;        &lt;a href=&quot;{% if member %}{% url 'club_member_detail' member.pk %}{% else %}{% url 'club_member_list' %}{% endif %}&quot; class=&quot;btn btn-secondary&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/club_member_list.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/club_member_list.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Club Members - MVC System&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Club Member Management&lt;/h1&gt;&#10;&#10;    {% if messages %}&#10;        {% for message in messages %}&#10;            &lt;div class=&quot;alert alert-info&quot;&gt;{{ message }}&lt;/div&gt;&#10;        {% endfor %}&#10;    {% endif %}&#10;&#10;    &lt;div class=&quot;mb-3&quot;&gt;&#10;        &lt;a class=&quot;btn btn-success&quot; href=&quot;{% url 'create_member' %}&quot;&gt;Add new club member&lt;/a&gt;&#10;        &lt;a class=&quot;btn btn-secondary&quot; href=&quot;{% url 'main_interface' %}&quot;&gt;Back to main&lt;/a&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#10;        &lt;thead class=&quot;table-dark&quot;&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;First Name&lt;/th&gt;&#10;                &lt;th&gt;Last Name&lt;/th&gt;&#10;                &lt;th&gt;Membership Number&lt;/th&gt;&#10;                &lt;th&gt;Actions&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for member in members %}&#10;            &lt;tr&gt;&#10;                &lt;td&gt;{{ member.first_name }}&lt;/td&gt;&#10;                &lt;td&gt;{{ member.last_name }}&lt;/td&gt;&#10;                &lt;td&gt;{{ member.membership_number }}&lt;/td&gt;&#10;                &lt;td&gt;&#10;                    &lt;a class=&quot;btn btn-info btn-sm&quot; href=&quot;{% url 'club_member_detail' member.pk %}&quot;&gt;View&lt;/a&gt;&#10;                    &lt;a class=&quot;btn btn-danger btn-sm&quot; href=&quot;{% url 'club_member_delete' member.pk %}&quot;&gt;Delete&lt;/a&gt;&#10;                &lt;/td&gt;&#10;            &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Club Members - MVC System&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Club Member Management&lt;/h1&gt;&#10;&#10;    {% if messages %}&#10;        {% for message in messages %}&#10;            &lt;div class=&quot;alert alert-info&quot;&gt;{{ message }}&lt;/div&gt;&#10;        {% endfor %}&#10;    {% endif %}&#10;&#10;    &lt;div class=&quot;mb-3&quot;&gt;&#10;        &lt;a class=&quot;btn btn-success&quot; href=&quot;{% url 'create_member' %}&quot;&gt;Add new club member&lt;/a&gt;&#10;        &lt;a class=&quot;btn btn-secondary&quot; href=&quot;{% url 'main_interface' %}&quot;&gt;Back to main&lt;/a&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#10;        &lt;thead class=&quot;table-dark&quot;&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;First Name&lt;/th&gt;&#10;                &lt;th&gt;Last Name&lt;/th&gt;&#10;                &lt;th&gt;Membership Number&lt;/th&gt;&#10;                &lt;th&gt;Actions&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for member in club_members %}&#10;            &lt;tr&gt;&#10;                &lt;td&gt;{{ member.first_name }}&lt;/td&gt;&#10;                &lt;td&gt;{{ member.last_name }}&lt;/td&gt;&#10;                &lt;td&gt;{{ member.membership_number }}&lt;/td&gt;&#10;                &lt;td&gt;&#10;                    &lt;a class=&quot;btn btn-info btn-sm&quot; href=&quot;{% url 'club_member_detail' member.pk %}&quot;&gt;View&lt;/a&gt;&#10;                    &lt;a class=&quot;btn btn-danger btn-sm&quot; href=&quot;{% url 'club_member_delete' member.pk %}&quot;&gt;Delete&lt;/a&gt;&#10;                &lt;/td&gt;&#10;            &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/family_member_confirm_delete.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/family_member_confirm_delete.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Delete Family Member - MVC System&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Delete Family Member&lt;/h1&gt;&#10;&#10;    &lt;p&gt;Are you sure you want to delete &lt;strong&gt;{{ family_member.first_name }} {{ family_member.last_name }}&lt;/strong&gt;?&lt;/p&gt;&#10;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;        &lt;button type=&quot;submit&quot; style=&quot;background: red; color: white; padding: 8px 16px;&quot;&gt;Yes, Delete&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'family_member_detail' family_member.pk %}&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Delete Family Member - MVC System&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Delete Family Member&lt;/h1&gt;&#10;    &lt;div class=&quot;alert alert-danger&quot;&gt;&#10;        &lt;p&gt;Are you sure you want to delete &lt;strong&gt;{{ family_member.first_name }} {{ family_member.last_name }}&lt;/strong&gt;?&lt;/p&gt;&#10;    &lt;/div&gt;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger&quot;&gt;Yes, Delete&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'family_member_detail' family_member.pk %}&quot; class=&quot;btn btn-secondary&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/family_member_detail.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/family_member_detail.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Family Member Details - MVC System&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Family Member Details&lt;/h1&gt;&#10;&#10;    &lt;table border=&quot;1&quot;&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Name:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.first_name }} {{ family_member.last_name }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Email:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.email_address }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Phone:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.telephone_number }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Date of Birth:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.date_of_birth }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Address:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.address }}, {{ family_member.city }}, {{ family_member.province }} {{ family_member.postal_code }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Location:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.location.name|default:&quot;No Location&quot; }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;SSN:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.social_security_number }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Medicare:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.medicare_card_number }}&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;h3&gt;Secondary Contacts&lt;/h3&gt;&#10;    &lt;a href=&quot;{% url 'secondary_family_member_create' family_member.pk %}&quot;&gt;Add Secondary Contact&lt;/a&gt;&#10;&#10;    &lt;table border=&quot;1&quot;&gt;&#10;        &lt;thead&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;Name&lt;/th&gt;&#10;                &lt;th&gt;Phone&lt;/th&gt;&#10;                &lt;th&gt;Relationship&lt;/th&gt;&#10;                &lt;th&gt;Actions&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for secondary in secondary_contacts %}&#10;                &lt;tr&gt;&#10;                    &lt;td&gt;{{ secondary.first_name }} {{ secondary.last_name }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ secondary.telephone_number }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ secondary.relationship }}&lt;/td&gt;&#10;                    &lt;td&gt;&#10;                        &lt;a href=&quot;{% url 'secondary_family_member_edit' secondary.pk %}&quot;&gt;Edit&lt;/a&gt; |&#10;                        &lt;a href=&quot;{% url 'secondary_family_member_delete' secondary.pk %}&quot;&gt;Delete&lt;/a&gt;&#10;                    &lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% empty %}&#10;                &lt;tr&gt;&#10;                    &lt;td colspan=&quot;4&quot;&gt;No secondary contacts.&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;h3&gt;Associated Club Members&lt;/h3&gt;&#10;    &lt;table border=&quot;1&quot;&gt;&#10;        &lt;thead&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;Member Name&lt;/th&gt;&#10;                &lt;th&gt;Relationship&lt;/th&gt;&#10;                &lt;th&gt;Start Date&lt;/th&gt;&#10;                &lt;th&gt;End Date&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for association in associated_members %}&#10;                &lt;tr&gt;&#10;                    &lt;td&gt;{{ association.minor_member.first_name }} {{ association.minor_member.last_name }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ association.relationship }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ association.start_date }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ association.end_date|default:&quot;Active&quot; }}&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% empty %}&#10;                &lt;tr&gt;&#10;                    &lt;td colspan=&quot;4&quot;&gt;No associated club members.&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;br&gt;&#10;    &lt;a href=&quot;{% url 'family_member_edit' family_member.pk %}&quot;&gt;Edit&lt;/a&gt; |&#10;    &lt;a href=&quot;{% url 'family_member_delete' family_member.pk %}&quot;&gt;Delete&lt;/a&gt; |&#10;    &lt;a href=&quot;{% url 'family_member_list' %}&quot;&gt;Back to List&lt;/a&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Family Member Details - MVC System&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Family Member Details&lt;/h1&gt;&#10;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Name:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.first_name }} {{ family_member.last_name }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Email:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.email_address }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Phone:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.telephone_number }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Date of Birth:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.date_of_birth }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Address:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.address }}, {{ family_member.city }}, {{ family_member.province }} {{ family_member.postal_code }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Location:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.location.name|default:&quot;No Location&quot; }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;SSN:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.social_security_number }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Medicare:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ family_member.medicare_card_number }}&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;h3&gt;Secondary Contacts&lt;/h3&gt;&#10;    &lt;a href=&quot;{% url 'secondary_family_member_create' family_member.pk %}&quot; class=&quot;btn btn-success mb-3&quot;&gt;Add Secondary Contact&lt;/a&gt;&#10;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#10;        &lt;thead class=&quot;table-dark&quot;&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;Name&lt;/th&gt;&#10;                &lt;th&gt;Phone&lt;/th&gt;&#10;                &lt;th&gt;Relationship&lt;/th&gt;&#10;                &lt;th&gt;Actions&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for secondary in secondary_contacts %}&#10;                &lt;tr&gt;&#10;                    &lt;td&gt;{{ secondary.first_name }} {{ secondary.last_name }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ secondary.telephone_number }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ secondary.relationship }}&lt;/td&gt;&#10;                    &lt;td&gt;&#10;                        &lt;a href=&quot;{% url 'secondary_family_member_edit' secondary.pk %}&quot; class=&quot;btn btn-warning btn-sm&quot;&gt;Edit&lt;/a&gt;&#10;                        &lt;a href=&quot;{% url 'secondary_family_member_delete' secondary.pk %}&quot; class=&quot;btn btn-danger btn-sm&quot;&gt;Delete&lt;/a&gt;&#10;                    &lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% empty %}&#10;                &lt;tr&gt;&#10;                    &lt;td colspan=&quot;4&quot;&gt;No secondary contacts.&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;h3&gt;Associated Club Members&lt;/h3&gt;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#10;        &lt;thead class=&quot;table-dark&quot;&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;Member Name&lt;/th&gt;&#10;                &lt;th&gt;Relationship&lt;/th&gt;&#10;                &lt;th&gt;Start Date&lt;/th&gt;&#10;                &lt;th&gt;End Date&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for association in associated_members %}&#10;                &lt;tr&gt;&#10;                    &lt;td&gt;{{ association.minor_member.first_name }} {{ association.minor_member.last_name }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ association.relationship }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ association.start_date }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ association.end_date|default:&quot;Active&quot; }}&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% empty %}&#10;                &lt;tr&gt;&#10;                    &lt;td colspan=&quot;4&quot;&gt;No associated club members.&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;br&gt;&#10;    &lt;a href=&quot;{% url 'family_member_edit' family_member.pk %}&quot; class=&quot;btn btn-primary&quot;&gt;Edit&lt;/a&gt;&#10;    &lt;a href=&quot;{% url 'family_member_delete' family_member.pk %}&quot; class=&quot;btn btn-danger&quot;&gt;Delete&lt;/a&gt;&#10;    &lt;a href=&quot;{% url 'family_member_list' %}&quot; class=&quot;btn btn-secondary&quot;&gt;Back to List&lt;/a&gt;&#10;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/family_member_form.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/family_member_form.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;{{ action }} Family Member - MVC System&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;{{ action }} Family Member&lt;/h1&gt;&#10;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;        &lt;table&gt;&#10;            {{ form.as_table }}&#10;        &lt;/table&gt;&#10;        &lt;br&gt;&#10;        &lt;button type=&quot;submit&quot;&gt;{{ action }} Family Member&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'family_member_list' %}&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;{{ action }} Family Member - MVC System&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;{{ action }} Family Member&lt;/h1&gt;&#10;&#10;    &lt;form method=&quot;post&quot; class=&quot;needs-validation&quot; novalidate&gt;&#10;        {% csrf_token %}&#10;        &lt;table class=&quot;table&quot;&gt;&#10;            {{ form.as_table }}&#10;        &lt;/table&gt;&#10;        &lt;br&gt;&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;{{ action }} Family Member&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'family_member_list' %}&quot; class=&quot;btn btn-secondary&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/family_member_list.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/family_member_list.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Family Members - MVC System&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Family Member Management&lt;/h1&gt;&#10;&#10;    {% if messages %}&#10;        {% for message in messages %}&#10;            &lt;div&gt;{{ message }}&lt;/div&gt;&#10;        {% endfor %}&#10;    {% endif %}&#10;&#10;    &lt;a href=&quot;{% url 'family_member_create' %}&quot;&gt;Add New Family Member&lt;/a&gt;&#10;    &lt;a href=&quot;{% url 'main_interface' %}&quot;&gt;Back to Main&lt;/a&gt;&#10;&#10;    &lt;table border=&quot;1&quot;&gt;&#10;        &lt;thead&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;Name&lt;/th&gt;&#10;                &lt;th&gt;Email&lt;/th&gt;&#10;                &lt;th&gt;Phone&lt;/th&gt;&#10;                &lt;th&gt;Location&lt;/th&gt;&#10;                &lt;th&gt;Actions&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for family_member in family_members %}&#10;                &lt;tr&gt;&#10;                    &lt;td&gt;&lt;a href=&quot;{% url 'family_member_detail' family_member.pk %}&quot;&gt;{{ family_member.first_name }} {{ family_member.last_name }}&lt;/a&gt;&lt;/td&gt;&#10;                    &lt;td&gt;{{ family_member.email_address }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ family_member.telephone_number }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ family_member.location.name|default:&quot;No Location&quot; }}&lt;/td&gt;&#10;                    &lt;td&gt;&#10;                        &lt;a href=&quot;{% url 'family_member_edit' family_member.pk %}&quot;&gt;Edit&lt;/a&gt; |&#10;                        &lt;a href=&quot;{% url 'family_member_delete' family_member.pk %}&quot;&gt;Delete&lt;/a&gt;&#10;                    &lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% empty %}&#10;                &lt;tr&gt;&#10;                    &lt;td colspan=&quot;5&quot;&gt;No family members found.&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#13;&#10;&lt;html lang=&quot;en&quot;&gt;&#13;&#10;&lt;head&gt;&#13;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#13;&#10;    &lt;title&gt;Family Members - MVC System&lt;/title&gt;&#13;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#13;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#13;&#10;&lt;/head&gt;&#13;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#13;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Family Member Management&lt;/h1&gt;&#13;&#10;&#13;&#10;    {% if messages %}&#13;&#10;        {% for message in messages %}&#13;&#10;            &lt;div class=&quot;alert alert-info&quot;&gt;{{ message }}&lt;/div&gt;&#13;&#10;        {% endfor %}&#13;&#10;    {% endif %}&#13;&#10;&#13;&#10;    &lt;div class=&quot;mb-3&quot;&gt;&#13;&#10;        &lt;a class=&quot;btn btn-success&quot; href=&quot;{% url 'family_member_create' %}&quot;&gt;Add New Family Member&lt;/a&gt;&#13;&#10;        &lt;a class=&quot;btn btn-secondary&quot; href=&quot;{% url 'main_interface' %}&quot;&gt;Back to Main&lt;/a&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;&#13;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#13;&#10;        &lt;thead class=&quot;table-dark&quot;&gt;&#13;&#10;            &lt;tr&gt;&#13;&#10;                &lt;th&gt;First Name&lt;/th&gt;&#13;&#10;                &lt;th&gt;Last Name&lt;/th&gt;&#13;&#10;                &lt;th&gt;Relationship&lt;/th&gt;&#13;&#10;                &lt;th&gt;Actions&lt;/th&gt;&#13;&#10;            &lt;/tr&gt;&#13;&#10;        &lt;/thead&gt;&#13;&#10;        &lt;tbody&gt;&#13;&#10;            {% for family_member in family_members %}&#13;&#10;            &lt;tr&gt;&#13;&#10;                &lt;td&gt;{{ family_member.first_name }}&lt;/td&gt;&#13;&#10;                &lt;td&gt;{{ family_member.last_name }}&lt;/td&gt;&#13;&#10;                &lt;td&gt;{{ family_member.relationship }}&lt;/td&gt;&#13;&#10;                &lt;td&gt;&#13;&#10;                    &lt;a class=&quot;btn btn-info btn-sm&quot; href=&quot;{% url 'family_member_detail' family_member.pk %}&quot;&gt;View&lt;/a&gt;&#13;&#10;                    &lt;a class=&quot;btn btn-danger btn-sm&quot; href=&quot;{% url 'family_member_delete' family_member.pk %}&quot;&gt;Delete&lt;/a&gt;&#13;&#10;                &lt;/td&gt;&#13;&#10;            &lt;/tr&gt;&#13;&#10;            {% endfor %}&#13;&#10;        &lt;/tbody&gt;&#13;&#10;    &lt;/table&gt;&#13;&#10;&#13;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#13;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#13;&#10;&lt;/body&gt;&#13;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/inactive_members_report.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/inactive_members_report.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Inactive Members Report&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;h1&gt;Inactive Members Report&lt;/h1&gt;&#10;&#10;{% if inactive_members %}&#10;    &lt;ul&gt;&#10;        {% for member in inactive_members %}&#10;            &lt;li&gt;{{ member.first_name }} {{ member.last_name }} - Joined: {{ member.date_joined }}&lt;/li&gt;&#10;        {% endfor %}&#10;    &lt;/ul&gt;&#10;{% else %}&#10;    &lt;p&gt;No inactive members found.&lt;/p&gt;&#10;{% endif %}&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#13;&#10;&lt;html lang=&quot;en&quot;&gt;&#13;&#10;&lt;head&gt;&#13;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#13;&#10;    &lt;title&gt;Inactive Members Report&lt;/title&gt;&#13;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#13;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#13;&#10;&lt;/head&gt;&#13;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#13;&#10;&lt;h1 class=&quot;mb-4&quot;&gt;Inactive Members Report&lt;/h1&gt;&#13;&#10;&#13;&#10;{% if inactive_members %}&#13;&#10;    &lt;ul class=&quot;list-group&quot;&gt;&#13;&#10;        {% for member in inactive_members %}&#13;&#10;            &lt;li class=&quot;list-group-item&quot;&gt;{{ member.first_name }} {{ member.last_name }} - Joined: {{ member.date_joined }}&lt;/li&gt;&#13;&#10;        {% endfor %}&#13;&#10;    &lt;/ul&gt;&#13;&#10;{% else %}&#13;&#10;    &lt;div class=&quot;alert alert-warning&quot;&gt;No inactive members found.&lt;/div&gt;&#13;&#10;{% endif %}&#13;&#10;&#13;&#10;&lt;!-- Add Bootstrap JS --&gt;&#13;&#10;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#13;&#10;&lt;/body&gt;&#13;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/main_interface.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/main_interface.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Dashboard&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;h1&gt;MVC&lt;/h1&gt;&#10;&lt;p&gt;Welcome to the main dashboard&lt;/p&gt;&#10;&lt;button onclick=&quot;window.location.href='{% url 'queries_asked:index' %}'&quot;&gt;Go to Queries&lt;/button&gt;&#10;&#10;&lt;h2&gt;Club Member Management&lt;/h2&gt;&#10;&lt;ul&gt;&#10;    &lt;li&gt;&lt;a href=&quot;{% url 'create_member' %}&quot;&gt;Register a new club member&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li&gt;&lt;a href=&quot;{% url 'member_list' %}&quot;&gt;View all club members&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li&gt;&lt;a href=&quot;{% url 'club_member_list' %}&quot;&gt;Manage club members&lt;/a&gt;&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;h2&gt;Personnel Management&lt;/h2&gt;&#10;&lt;ul&gt;&#10;    &lt;li&gt;&lt;a href=&quot;{% url 'personnel_list' %}&quot;&gt;Manage personnel&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li&gt;&lt;a href=&quot;{% url 'personnel_create' %}&quot;&gt;Add new personnel&lt;/a&gt;&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;h2&gt;Family Member Management&lt;/h2&gt;&#10;&lt;ul&gt;&#10;    &lt;li&gt;&lt;a href=&quot;{% url 'family_member_list' %}&quot;&gt;Manage family members&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li&gt;&lt;a href=&quot;{% url 'family_member_create' %}&quot;&gt;Add new family member&lt;/a&gt;&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;h2&gt;Reports&lt;/h2&gt;&#10;&lt;ul&gt;&#10;    &lt;li&gt;&lt;a href=&quot;{% url 'location_report' %}&quot;&gt;Get a report on all locations&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li&gt;&lt;a href=&quot;{% url 'inactive_members_report' %}&quot;&gt;Inactive members report&lt;/a&gt;&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;h2&gt;Team Management&lt;/h2&gt;&#10;&lt;ul&gt;&#10;    &lt;li&gt;&lt;a href=&quot;{% url 'team_formation_list' %}&quot;&gt;View all team formations&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li&gt;&lt;a href=&quot;{% url 'team_formation_create' %}&quot;&gt;Create new team formation&lt;/a&gt;&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;{% if report_title %}&#10;&lt;h3&gt;{{ report_title }}&lt;/h3&gt;&#10;{% if report_data %}&#10;&lt;table border=&quot;1&quot;&gt;&#10;    &lt;thead&gt;&#10;    &lt;tr&gt;&#10;        {% for header in report_headers %}&#10;        &lt;th&gt;{{ header }}&lt;/th&gt;&#10;        {% endfor %}&#10;    &lt;/tr&gt;&#10;    &lt;/thead&gt;&#10;    &lt;tbody&gt;&#10;    {% for row in report_data %}&#10;    &lt;tr&gt;&#10;        {% for cell in row %}&#10;        &lt;td&gt;{{ cell }}&lt;/td&gt;&#10;        {% endfor %}&#10;    &lt;/tr&gt;&#10;    {% endfor %}&#10;    &lt;/tbody&gt;&#10;&lt;/table&gt;&#10;{% else %}&#10;&lt;p&gt;No results found for this report.&lt;/p&gt;&#10;{% endif %}&#10;{% endif %}&#10;&#10;{% if members %}&#10;&lt;h3&gt;All Club Members&lt;/h3&gt;&#10;&lt;table border=&quot;1&quot;&gt;&#10;    &lt;thead&gt;&#10;    &lt;tr&gt;&#10;        &lt;th&gt;Membership Number&lt;/th&gt;&#10;        &lt;th&gt;First Name&lt;/th&gt;&#10;        &lt;th&gt;Last Name&lt;/th&gt;&#10;        &lt;th&gt;Email&lt;/th&gt;&#10;        &lt;th&gt;Location&lt;/th&gt;&#10;        &lt;th&gt;Date Joined&lt;/th&gt;&#10;    &lt;/tr&gt;&#10;    &lt;/thead&gt;&#10;    &lt;tbody&gt;&#10;    {% for member in members %}&#10;    &lt;tr&gt;&#10;        &lt;td&gt;{{ member.membership_number }}&lt;/td&gt;&#10;        &lt;td&gt;{{ member.first_name }}&lt;/td&gt;&#10;        &lt;td&gt;{{ member.last_name }}&lt;/td&gt;&#10;        &lt;td&gt;{{ member.email_address }}&lt;/td&gt;&#10;        &lt;td&gt;{{ member.location.name|default:&quot;No Location&quot; }}&lt;/td&gt;&#10;        &lt;td&gt;{{ member.date_joined }}&lt;/td&gt;&#10;    &lt;/tr&gt;&#10;    {% endfor %}&#10;    &lt;/tbody&gt;&#10;&lt;/table&gt;&#10;{% endif %}&#10;&#10;{% if location_data %}&#10;&lt;h3&gt;All Locations&lt;/h3&gt;&#10;&lt;table border=&quot;1&quot;&gt;&#10;    &lt;thead&gt;&#10;    &lt;tr&gt;&#10;        &lt;th&gt;Name&lt;/th&gt;&#10;        &lt;th&gt;Type&lt;/th&gt;&#10;        &lt;th&gt;Address&lt;/th&gt;&#10;        &lt;th&gt;City&lt;/th&gt;&#10;        &lt;th&gt;Phone&lt;/th&gt;&#10;        &lt;th&gt;Max Capacity&lt;/th&gt;&#10;    &lt;/tr&gt;&#10;    &lt;/thead&gt;&#10;    &lt;tbody&gt;&#10;    {% for location in location_data %}&#10;    &lt;tr&gt;&#10;        &lt;td&gt;{{ location.name }}&lt;/td&gt;&#10;        &lt;td&gt;{{ location.type }}&lt;/td&gt;&#10;        &lt;td&gt;{{ location.address }}&lt;/td&gt;&#10;        &lt;td&gt;{{ location.city }}&lt;/td&gt;&#10;        &lt;td&gt;{{ location.phone_number }}&lt;/td&gt;&#10;        &lt;td&gt;{{ location.max_capacity }}&lt;/td&gt;&#10;    &lt;/tr&gt;&#10;    {% endfor %}&#10;    &lt;/tbody&gt;&#10;&lt;/table&gt;&#10;{% endif %}&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Dashboard&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;&lt;h1 class=&quot;mb-4&quot;&gt;MVC&lt;/h1&gt;&#10;&lt;p&gt;Welcome to the main dashboard&lt;/p&gt;&#10;&lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:index' %}'&quot;&gt;Go to Queries&lt;/button&gt;&#10;&#10;&lt;h2 class=&quot;mt-4&quot;&gt;Club Member Management&lt;/h2&gt;&#10;&lt;ul class=&quot;list-group&quot;&gt;&#10;    &lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;{% url 'create_member' %}&quot;&gt;Register a new club member&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;{% url 'member_list' %}&quot;&gt;View all club members&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;{% url 'club_member_list' %}&quot;&gt;Manage club members&lt;/a&gt;&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;h2 class=&quot;mt-4&quot;&gt;Personnel Management&lt;/h2&gt;&#10;&lt;ul class=&quot;list-group&quot;&gt;&#10;    &lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;{% url 'personnel_list' %}&quot;&gt;Manage personnel&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;{% url 'personnel_create' %}&quot;&gt;Add new personnel&lt;/a&gt;&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;h2 class=&quot;mt-4&quot;&gt;Family Member Management&lt;/h2&gt;&#10;&lt;ul class=&quot;list-group&quot;&gt;&#10;    &lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;{% url 'family_member_list' %}&quot;&gt;Manage family members&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;{% url 'family_member_create' %}&quot;&gt;Add new family member&lt;/a&gt;&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;h2 class=&quot;mt-4&quot;&gt;Reports&lt;/h2&gt;&#10;&lt;ul class=&quot;list-group&quot;&gt;&#10;    &lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;{% url 'location_report' %}&quot;&gt;Get a report on all locations&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;{% url 'inactive_members_report' %}&quot;&gt;Inactive members report&lt;/a&gt;&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;h2 class=&quot;mt-4&quot;&gt;Team Management&lt;/h2&gt;&#10;&lt;ul class=&quot;list-group&quot;&gt;&#10;    &lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;{% url 'team_formation_list' %}&quot;&gt;View all team formations&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;{% url 'team_formation_create' %}&quot;&gt;Create new team formation&lt;/a&gt;&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;{% if report_title %}&#10;&lt;h3&gt;{{ report_title }}&lt;/h3&gt;&#10;{% if report_data %}&#10;&lt;table class=&quot;table table-bordered&quot;&gt;&#10;    &lt;thead&gt;&#10;    &lt;tr&gt;&#10;        {% for header in report_headers %}&#10;        &lt;th&gt;{{ header }}&lt;/th&gt;&#10;        {% endfor %}&#10;    &lt;/tr&gt;&#10;    &lt;/thead&gt;&#10;    &lt;tbody&gt;&#10;    {% for row in report_data %}&#10;    &lt;tr&gt;&#10;        {% for cell in row %}&#10;        &lt;td&gt;{{ cell }}&lt;/td&gt;&#10;        {% endfor %}&#10;    &lt;/tr&gt;&#10;    {% endfor %}&#10;    &lt;/tbody&gt;&#10;&lt;/table&gt;&#10;{% else %}&#10;&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;&#10;    No results found for this report.&#10;&lt;/div&gt;&#10;{% endif %}&#10;{% endif %}&#10;&#10;{% if members %}&#10;&lt;h3&gt;All Club Members&lt;/h3&gt;&#10;&lt;table class=&quot;table table-bordered&quot;&gt;&#10;    &lt;thead&gt;&#10;    &lt;tr&gt;&#10;        &lt;th&gt;Membership Number&lt;/th&gt;&#10;        &lt;th&gt;First Name&lt;/th&gt;&#10;        &lt;th&gt;Last Name&lt;/th&gt;&#10;        &lt;th&gt;Email&lt;/th&gt;&#10;        &lt;th&gt;Location&lt;/th&gt;&#10;        &lt;th&gt;Date Joined&lt;/th&gt;&#10;    &lt;/tr&gt;&#10;    &lt;/thead&gt;&#10;    &lt;tbody&gt;&#10;    {% for member in members %}&#10;    &lt;tr&gt;&#10;        &lt;td&gt;{{ member.membership_number }}&lt;/td&gt;&#10;        &lt;td&gt;{{ member.first_name }}&lt;/td&gt;&#10;        &lt;td&gt;{{ member.last_name }}&lt;/td&gt;&#10;        &lt;td&gt;{{ member.email_address }}&lt;/td&gt;&#10;        &lt;td&gt;{{ member.location.name|default:&quot;No Location&quot; }}&lt;/td&gt;&#10;        &lt;td&gt;{{ member.date_joined }}&lt;/td&gt;&#10;    &lt;/tr&gt;&#10;    {% endfor %}&#10;    &lt;/tbody&gt;&#10;&lt;/table&gt;&#10;{% endif %}&#10;&#10;{% if location_data %}&#10;&lt;h3&gt;All Locations&lt;/h3&gt;&#10;&lt;table class=&quot;table table-bordered&quot;&gt;&#10;    &lt;thead&gt;&#10;    &lt;tr&gt;&#10;        &lt;th&gt;Name&lt;/th&gt;&#10;        &lt;th&gt;Type&lt;/th&gt;&#10;        &lt;th&gt;Address&lt;/th&gt;&#10;        &lt;th&gt;City&lt;/th&gt;&#10;        &lt;th&gt;Phone&lt;/th&gt;&#10;        &lt;th&gt;Max Capacity&lt;/th&gt;&#10;    &lt;/tr&gt;&#10;    &lt;/thead&gt;&#10;    &lt;tbody&gt;&#10;    {% for location in location_data %}&#10;    &lt;tr&gt;&#10;        &lt;td&gt;{{ location.name }}&lt;/td&gt;&#10;        &lt;td&gt;{{ location.type }}&lt;/td&gt;&#10;        &lt;td&gt;{{ location.address }}&lt;/td&gt;&#10;        &lt;td&gt;{{ location.city }}&lt;/td&gt;&#10;        &lt;td&gt;{{ location.phone_number }}&lt;/td&gt;&#10;        &lt;td&gt;{{ location.max_capacity }}&lt;/td&gt;&#10;    &lt;/tr&gt;&#10;    {% endfor %}&#10;    &lt;/tbody&gt;&#10;&lt;/table&gt;&#10;{% endif %}&#10;&#10;&lt;!-- Add Bootstrap JS --&gt;&#10;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/member_creation.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/member_creation.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Register Club Member&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Register a New Club Member&lt;/h1&gt;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;        {{ form.as_p }}&#10;        &lt;button type=&quot;submit&quot;&gt;Register Member&lt;/button&gt;&#10;    &lt;/form&gt;&#10;&#10;    &lt;a href=&quot;{% url 'main_interface' %}&quot;&gt;Back to Dashboard&lt;/a&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Register Club Member&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Register a New Club Member&lt;/h1&gt;&#10;    &lt;form method=&quot;post&quot; class=&quot;needs-validation&quot; novalidate&gt;&#10;        {% csrf_token %}&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#10;            {{ form.as_p }}&#10;        &lt;/div&gt;&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;Register Member&lt;/button&gt;&#10;    &lt;/form&gt;&#10;&#10;    &lt;a href=&quot;{% url 'main_interface' %}&quot; class=&quot;btn btn-secondary mt-3&quot;&gt;Back to Dashboard&lt;/a&gt;&#10;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/personnel_confirm_delete.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/personnel_confirm_delete.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Delete Personnel - MVC System&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Delete Personnel&lt;/h1&gt;&#10;&#10;    &lt;p&gt;Are you sure you want to delete &lt;strong&gt;{{ personnel.first_name }} {{ personnel.last_name }}&lt;/strong&gt;?&lt;/p&gt;&#10;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;        &lt;button type=&quot;submit&quot;&gt;Yes, Delete&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'personnel_detail' personnel.pk %}&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Delete Personnel - MVC System&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Delete Personnel&lt;/h1&gt;&#10;&#10;    &lt;div class=&quot;alert alert-danger&quot;&gt;&#10;        &lt;p&gt;Are you sure you want to delete &lt;strong&gt;{{ personnel.first_name }} {{ personnel.last_name }}&lt;/strong&gt;?&lt;/p&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger&quot;&gt;Yes, Delete&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'personnel_detail' personnel.pk %}&quot; class=&quot;btn btn-secondary&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/personnel_detail.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/personnel_detail.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Personnel Details - MVC System&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Personnel Details&lt;/h1&gt;&#10;&#10;    &lt;table border=&quot;1&quot;&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Name:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.first_name }} {{ personnel.last_name }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Role:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.role }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Mandate:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.mandate }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Date of Birth:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.date_of_birth }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Email:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.email_address }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Phone:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.telephone_number }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Address:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.address }}, {{ personnel.city }}, {{ personnel.province }} {{ personnel.postal_code }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;SSN:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.social_security_number }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Medicare:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.medicare_card_number }}&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;a href=&quot;{% url 'personnel_edit' personnel.pk %}&quot;&gt;Edit&lt;/a&gt; |&#10;    &lt;a href=&quot;{% url 'personnel_delete' personnel.pk %}&quot;&gt;Delete&lt;/a&gt; |&#10;    &lt;a href=&quot;{% url 'personnel_list' %}&quot;&gt;Back to List&lt;/a&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Personnel Details - MVC System&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Personnel Details&lt;/h1&gt;&#10;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Name:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.first_name }} {{ personnel.last_name }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Role:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.role }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Mandate:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.mandate }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Date of Birth:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.date_of_birth }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Email:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.email_address }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Phone:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.telephone_number }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Address:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.address }}, {{ personnel.city }}, {{ personnel.province }} {{ personnel.postal_code }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;SSN:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.social_security_number }}&lt;/td&gt;&lt;/tr&gt;&#10;        &lt;tr&gt;&lt;td&gt;&lt;strong&gt;Medicare:&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;{{ personnel.medicare_card_number }}&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;/table&gt;&#10;&#10;    &lt;a href=&quot;{% url 'personnel_edit' personnel.pk %}&quot; class=&quot;btn btn-primary&quot;&gt;Edit&lt;/a&gt;&#10;    &lt;a href=&quot;{% url 'personnel_delete' personnel.pk %}&quot; class=&quot;btn btn-danger&quot;&gt;Delete&lt;/a&gt;&#10;    &lt;a href=&quot;{% url 'personnel_list' %}&quot; class=&quot;btn btn-secondary&quot;&gt;Back to List&lt;/a&gt;&#10;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/personnel_form.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/personnel_form.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;{{ action }} Personnel - MVC System&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;h1&gt;{{ action }} Personnel&lt;/h1&gt;&#10;&#10;&lt;form method=&quot;post&quot;&gt;&#10;    {% csrf_token %}&#10;    &lt;table&gt;&#10;        {{ form.as_table }}&#10;    &lt;/table&gt;&#10;    &lt;br&gt;&#10;    &lt;button type=&quot;submit&quot;&gt;{{ action }} Personnel&lt;/button&gt;&#10;    &lt;a href=&quot;{% url 'personnel_list' %}&quot;&gt;Cancel&lt;/a&gt;&#10;&lt;/form&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;{{ action }} Personnel - MVC System&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;{{ action }} Personnel&lt;/h1&gt;&#10;&#10;    &lt;form method=&quot;post&quot; class=&quot;needs-validation&quot; novalidate&gt;&#10;        {% csrf_token %}&#10;        &lt;table class=&quot;table&quot;&gt;&#10;            {{ form.as_table }}&#10;        &lt;/table&gt;&#10;        &lt;br&gt;&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;{{ action }} Personnel&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'personnel_list' %}&quot; class=&quot;btn btn-secondary&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/personnel_list.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/personnel_list.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Personnel List - MVC System&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Personnel Management&lt;/h1&gt;&#10;&#10;    {% if messages %}&#10;        {% for message in messages %}&#10;            &lt;div&gt;{{ message }}&lt;/div&gt;&#10;        {% endfor %}&#10;    {% endif %}&#10;&#10;    &lt;a href=&quot;{% url 'personnel_create' %}&quot;&gt;Add New Personnel&lt;/a&gt;&#10;    &lt;a href=&quot;{% url 'main_interface' %}&quot;&gt;Back to Main&lt;/a&gt;&#10;&#10;    &lt;table border=&quot;1&quot;&gt;&#10;        &lt;thead&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;Name&lt;/th&gt;&#10;                &lt;th&gt;Role&lt;/th&gt;&#10;                &lt;th&gt;Mandate&lt;/th&gt;&#10;                &lt;th&gt;Email&lt;/th&gt;&#10;                &lt;th&gt;Phone&lt;/th&gt;&#10;                &lt;th&gt;Actions&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for person in personnel_list %}&#10;                &lt;tr&gt;&#10;                    &lt;td&gt;&lt;a href=&quot;{% url 'personnel_detail' person.pk %}&quot;&gt;{{ person.first_name }} {{ person.last_name }}&lt;/a&gt;&lt;/td&gt;&#10;                    &lt;td&gt;{{ person.role }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ person.mandate }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ person.email_address }}&lt;/td&gt;&#10;                    &lt;td&gt;{{ person.telephone_number }}&lt;/td&gt;&#10;                    &lt;td&gt;&#10;                        &lt;a href=&quot;{% url 'personnel_edit' person.pk %}&quot;&gt;Edit&lt;/a&gt; |&#10;                        &lt;a href=&quot;{% url 'personnel_delete' person.pk %}&quot;&gt;Delete&lt;/a&gt;&#10;                    &lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% empty %}&#10;                &lt;tr&gt;&#10;                    &lt;td colspan=&quot;6&quot;&gt;No personnel found.&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#13;&#10;&lt;html lang=&quot;en&quot;&gt;&#13;&#10;&lt;head&gt;&#13;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#13;&#10;    &lt;title&gt;Personnel List - MVC System&lt;/title&gt;&#13;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#13;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#13;&#10;&lt;/head&gt;&#13;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#13;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Personnel Management&lt;/h1&gt;&#13;&#10;&#13;&#10;    {% if messages %}&#13;&#10;        {% for message in messages %}&#13;&#10;            &lt;div class=&quot;alert alert-info&quot;&gt;{{ message }}&lt;/div&gt;&#13;&#10;        {% endfor %}&#13;&#10;    {% endif %}&#13;&#10;&#13;&#10;    &lt;div class=&quot;mb-3&quot;&gt;&#13;&#10;        &lt;a class=&quot;btn btn-success&quot; href=&quot;{% url 'personnel_create' %}&quot;&gt;Add New Personnel&lt;/a&gt;&#13;&#10;        &lt;a class=&quot;btn btn-secondary&quot; href=&quot;{% url 'main_interface' %}&quot;&gt;Back to Main&lt;/a&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;&#13;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#13;&#10;        &lt;thead class=&quot;table-dark&quot;&gt;&#13;&#10;            &lt;tr&gt;&#13;&#10;                &lt;th&gt;First Name&lt;/th&gt;&#13;&#10;                &lt;th&gt;Last Name&lt;/th&gt;&#13;&#10;                &lt;th&gt;Role&lt;/th&gt;&#13;&#10;                &lt;th&gt;Actions&lt;/th&gt;&#13;&#10;            &lt;/tr&gt;&#13;&#10;        &lt;/thead&gt;&#13;&#10;        &lt;tbody&gt;&#13;&#10;            {% for personnel in personnel_list %}&#13;&#10;            &lt;tr&gt;&#13;&#10;                &lt;td&gt;{{ personnel.first_name }}&lt;/td&gt;&#13;&#10;                &lt;td&gt;{{ personnel.last_name }}&lt;/td&gt;&#13;&#10;                &lt;td&gt;{{ personnel.role }}&lt;/td&gt;&#13;&#10;                &lt;td&gt;&#13;&#10;                    &lt;a class=&quot;btn btn-info btn-sm&quot; href=&quot;{% url 'personnel_detail' personnel.pk %}&quot;&gt;View&lt;/a&gt;&#13;&#10;                    &lt;a class=&quot;btn btn-danger btn-sm&quot; href=&quot;{% url 'personnel_delete' personnel.pk %}&quot;&gt;Delete&lt;/a&gt;&#13;&#10;                &lt;/td&gt;&#13;&#10;            &lt;/tr&gt;&#13;&#10;            {% endfor %}&#13;&#10;        &lt;/tbody&gt;&#13;&#10;    &lt;/table&gt;&#13;&#10;&#13;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#13;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#13;&#10;&lt;/body&gt;&#13;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/player_assignment_confirm_delete.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/player_assignment_confirm_delete.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&#10;    &lt;title&gt;Remove Player from Team&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Remove Player from Team&lt;/h1&gt;&#10;&#10;    &lt;div&gt;&#10;        &lt;strong&gt;Warning!&lt;/strong&gt; This will remove the player from this team formation.&#10;    &lt;/div&gt;&#10;&#10;    &lt;div&gt;&#10;        &lt;h3&gt;Player: {{ assignment.club_member.first_name }} {{ assignment.club_member.last_name }}&lt;/h3&gt;&#10;        &lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; {{ assignment.role }}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; {{ assignment.team_formation.team_name }}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Session Date:&lt;/strong&gt; {{ assignment.team_formation.session_date }}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Session Time:&lt;/strong&gt; {{ assignment.team_formation.start_time }}&lt;/p&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;p&gt;Are you sure you want to remove this player from the team formation?&lt;/p&gt;&#10;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;        &lt;button type=&quot;submit&quot;&gt;Yes, Remove Player&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'team_formation_detail' assignment.team_formation.pk %}&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&#10;    &lt;title&gt;Remove Player from Team&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Remove Player from Team&lt;/h1&gt;&#10;&#10;    &lt;div class=&quot;alert alert-danger&quot;&gt;&#10;        &lt;strong&gt;Warning!&lt;/strong&gt; This will remove the player from this team formation.&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;card&quot;&gt;&#10;        &lt;div class=&quot;card-body&quot;&gt;&#10;            &lt;h3 class=&quot;card-title&quot;&gt;Player: {{ assignment.club_member.first_name }} {{ assignment.club_member.last_name }}&lt;/h3&gt;&#10;            &lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; {{ assignment.role }}&lt;/p&gt;&#10;            &lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; {{ assignment.team_formation.team_name }}&lt;/p&gt;&#10;            &lt;p&gt;&lt;strong&gt;Session Date:&lt;/strong&gt; {{ assignment.team_formation.session_date }}&lt;/p&gt;&#10;            &lt;p&gt;&lt;strong&gt;Session Time:&lt;/strong&gt; {{ assignment.team_formation.start_time }}&lt;/p&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;p class=&quot;mt-3&quot;&gt;Are you sure you want to remove this player from the team formation?&lt;/p&gt;&#10;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger&quot;&gt;Yes, Remove Player&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'team_formation_detail' assignment.team_formation.pk %}&quot; class=&quot;btn btn-secondary&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/player_assignment_form.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/player_assignment_form.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&#10;    &lt;title&gt;Add Player to {{ formation.team_name }}&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Add Player to Team Formation&lt;/h1&gt;&#10;&#10;    &lt;div&gt;&#10;        &lt;h3&gt;{{ formation.team_name }}&lt;/h3&gt;&#10;        &lt;p&gt;&lt;strong&gt;Date:&lt;/strong&gt; {{ formation.session_date }}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Time:&lt;/strong&gt; {{ formation.start_time }}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Type:&lt;/strong&gt; {% if formation.is_game %}Game{% else %}Training{% endif %}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Current Players:&lt;/strong&gt; {{ formation.players.count }}&lt;/p&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;&#10;        &lt;div&gt;&#10;            &lt;label for=&quot;{{ form.club_member.id_for_label }}&quot;&gt;Select Player:&lt;/label&gt;&#10;            {{ form.club_member }}&#10;            {% if form.club_member.errors %}&#10;                &lt;div&gt;{{ form.club_member.errors }}&lt;/div&gt;&#10;            {% endif %}&#10;        &lt;/div&gt;&#10;&#10;        &lt;div&gt;&#10;            &lt;label for=&quot;{{ form.role.id_for_label }}&quot;&gt;Player Role:&lt;/label&gt;&#10;            {{ form.role }}&#10;            {% if form.role.errors %}&#10;                &lt;div&gt;{{ form.role.errors }}&lt;/div&gt;&#10;            {% endif %}&#10;        &lt;/div&gt;&#10;&#10;        {% if form.non_field_errors %}&#10;            &lt;div&gt;{{ form.non_field_errors }}&lt;/div&gt;&#10;        {% endif %}&#10;&#10;        &lt;button type=&quot;submit&quot;&gt;Add Player&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'team_formation_detail' formation.pk %}&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&#10;    &lt;title&gt;Add Player to {{ formation.team_name }}&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;div class=&quot;container mt-5&quot;&gt;&#10;        &lt;h1 class=&quot;mb-4&quot;&gt;Add Player to Team Formation&lt;/h1&gt;&#10;&#10;        &lt;div class=&quot;mb-4&quot;&gt;&#10;            &lt;h3&gt;{{ formation.team_name }}&lt;/h3&gt;&#10;            &lt;p&gt;&lt;strong&gt;Date:&lt;/strong&gt; {{ formation.session_date }}&lt;/p&gt;&#10;            &lt;p&gt;&lt;strong&gt;Time:&lt;/strong&gt; {{ formation.start_time }}&lt;/p&gt;&#10;            &lt;p&gt;&lt;strong&gt;Type:&lt;/strong&gt; {% if formation.is_game %}Game{% else %}Training{% endif %}&lt;/p&gt;&#10;            &lt;p&gt;&lt;strong&gt;Current Players:&lt;/strong&gt; {{ formation.players.count }}&lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;form method=&quot;post&quot; class=&quot;needs-validation&quot; novalidate&gt;&#10;            {% csrf_token %}&#10;&#10;            &lt;div class=&quot;mb-3&quot;&gt;&#10;                &lt;label for=&quot;{{ form.club_member.id_for_label }}&quot; class=&quot;form-label&quot;&gt;Select Player:&lt;/label&gt;&#10;                {{ form.club_member }}&#10;                {% if form.club_member.errors %}&#10;                    &lt;div class=&quot;text-danger&quot;&gt;{{ form.club_member.errors }}&lt;/div&gt;&#10;                {% endif %}&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;mb-3&quot;&gt;&#10;                &lt;label for=&quot;{{ form.role.id_for_label }}&quot; class=&quot;form-label&quot;&gt;Player Role:&lt;/label&gt;&#10;                {{ form.role }}&#10;                {% if form.role.errors %}&#10;                    &lt;div class=&quot;text-danger&quot;&gt;{{ form.role.errors }}&lt;/div&gt;&#10;                {% endif %}&#10;            &lt;/div&gt;&#10;&#10;            {% if form.non_field_errors %}&#10;                &lt;div class=&quot;text-danger&quot;&gt;{{ form.non_field_errors }}&lt;/div&gt;&#10;            {% endif %}&#10;&#10;            &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;Add Player&lt;/button&gt;&#10;            &lt;a href=&quot;{% url 'team_formation_detail' formation.pk %}&quot; class=&quot;btn btn-secondary&quot;&gt;Cancel&lt;/a&gt;&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/secondary_family_member_confirm_delete.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/secondary_family_member_confirm_delete.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Delete Secondary Family Member - MVC System&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Delete Secondary Family Member&lt;/h1&gt;&#10;&#10;    &lt;p&gt;Are you sure you want to delete &lt;strong&gt;{{ secondary.first_name }} {{ secondary.last_name }}&lt;/strong&gt; as a secondary contact?&lt;/p&gt;&#10;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;        &lt;button type=&quot;submit&quot;&gt;Yes, Delete&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'family_member_detail' secondary.primary_family_member.pk %}&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Delete Secondary Family Member - MVC System&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Delete Secondary Family Member&lt;/h1&gt;&#10;    &lt;div class=&quot;alert alert-danger&quot;&gt;&#10;        &lt;p&gt;Are you sure you want to delete &lt;strong&gt;{{ secondary.first_name }} {{ secondary.last_name }}&lt;/strong&gt; as a secondary contact?&lt;/p&gt;&#10;    &lt;/div&gt;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger&quot;&gt;Yes, Delete&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'family_member_detail' secondary.primary_family_member.pk %}&quot; class=&quot;btn btn-secondary&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/secondary_family_member_form.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/secondary_family_member_form.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;{{ action }} Secondary Family Member - MVC System&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;{{ action }} Secondary Family Member&lt;/h1&gt;&#10;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;        &lt;table&gt;&#10;            {{ form.as_table }}&#10;        &lt;/table&gt;&#10;        &lt;br&gt;&#10;        &lt;button type=&quot;submit&quot;&gt;{{ action }} Secondary Family Member&lt;/button&gt;&#10;        &lt;a href=&quot;{% if family_member %}{% url 'family_member_detail' family_member.pk %}{% elif secondary %}{% url 'family_member_detail' secondary.primary_family_member.pk %}{% endif %}&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#13;&#10;&lt;html lang=&quot;en&quot;&gt;&#13;&#10;&lt;head&gt;&#13;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#13;&#10;    &lt;title&gt;{{ action }} Secondary Family Member - MVC System&lt;/title&gt;&#13;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#13;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#13;&#10;&lt;/head&gt;&#13;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#13;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;{{ action }} Secondary Family Member&lt;/h1&gt;&#13;&#10;    &lt;form method=&quot;post&quot; class=&quot;needs-validation&quot; novalidate&gt;&#13;&#10;        {% csrf_token %}&#13;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#13;&#10;            &lt;table class=&quot;table&quot;&gt;&#13;&#10;                {{ form.as_table }}&#13;&#10;            &lt;/table&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;{{ action }} Secondary Family Member&lt;/button&gt;&#13;&#10;        &lt;a href=&quot;{% if family_member %}{% url 'family_member_detail' family_member.pk %}{% elif secondary %}{% url 'family_member_detail' secondary.primary_family_member.pk %}{% endif %}&quot; class=&quot;btn btn-secondary&quot;&gt;Cancel&lt;/a&gt;&#13;&#10;    &lt;/form&gt;&#13;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#13;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#13;&#10;&lt;/body&gt;&#13;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/team_formation_confirm_delete.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/team_formation_confirm_delete.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&#10;    &lt;title&gt;Delete Team Formation&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Delete Team Formation&lt;/h1&gt;&#10;&#10;    &lt;div&gt;&#10;        &lt;strong&gt;Warning!&lt;/strong&gt; This action cannot be undone. Deleting this team formation will also remove all player assignments.&#10;    &lt;/div&gt;&#10;&#10;    &lt;div&gt;&#10;        &lt;h3&gt;{{ formation.team_name }}&lt;/h3&gt;&#10;        &lt;p&gt;&lt;strong&gt;Date:&lt;/strong&gt; {{ formation.session_date }}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Time:&lt;/strong&gt; {{ formation.start_time }}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Type:&lt;/strong&gt; {% if formation.is_game %}Game{% else %}Training{% endif %}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Location:&lt;/strong&gt; {{ formation.location.name }}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Head Coach:&lt;/strong&gt; {{ formation.head_coach.first_name }} {{ formation.head_coach.last_name }}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Players:&lt;/strong&gt; {{ formation.players.count }}&lt;/p&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;p&gt;Are you sure you want to delete this team formation?&lt;/p&gt;&#10;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;        &lt;button type=&quot;submit&quot;&gt;Yes, Delete&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'team_formation_detail' formation.pk %}&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#13;&#10;&lt;html&gt;&#13;&#10;&lt;head&gt;&#13;&#10;    &lt;title&gt;Delete Team Formation&lt;/title&gt;&#13;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#13;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#13;&#10;&lt;/head&gt;&#13;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#13;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Delete Team Formation&lt;/h1&gt;&#13;&#10;    &lt;div class=&quot;alert alert-danger&quot;&gt;&#13;&#10;        &lt;strong&gt;Warning!&lt;/strong&gt; This action cannot be undone. Deleting this team formation will also remove all player assignments.&#13;&#10;    &lt;/div&gt;&#13;&#10;    &lt;div class=&quot;card&quot;&gt;&#13;&#10;        &lt;div class=&quot;card-body&quot;&gt;&#13;&#10;            &lt;h3 class=&quot;card-title&quot;&gt;{{ formation.team_name }}&lt;/h3&gt;&#13;&#10;            &lt;p&gt;&lt;strong&gt;Date:&lt;/strong&gt; {{ formation.session_date }}&lt;/p&gt;&#13;&#10;            &lt;p&gt;&lt;strong&gt;Time:&lt;/strong&gt; {{ formation.start_time }}&lt;/p&gt;&#13;&#10;            &lt;p&gt;&lt;strong&gt;Type:&lt;/strong&gt; {% if formation.is_game %}Game{% else %}Training{% endif %}&lt;/p&gt;&#13;&#10;            &lt;p&gt;&lt;strong&gt;Location:&lt;/strong&gt; {{ formation.location.name }}&lt;/p&gt;&#13;&#10;            &lt;p&gt;&lt;strong&gt;Head Coach:&lt;/strong&gt; {{ formation.head_coach.first_name }} {{ formation.head_coach.last_name }}&lt;/p&gt;&#13;&#10;            &lt;p&gt;&lt;strong&gt;Players:&lt;/strong&gt; {{ formation.players.count }}&lt;/p&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;    &lt;form method=&quot;post&quot;&gt;&#13;&#10;        {% csrf_token %}&#13;&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger&quot;&gt;Confirm Delete&lt;/button&gt;&#13;&#10;        &lt;a href=&quot;{% url 'team_formation_list' %}&quot; class=&quot;btn btn-secondary&quot;&gt;Cancel&lt;/a&gt;&#13;&#10;    &lt;/form&gt;&#13;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#13;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#13;&#10;&lt;/body&gt;&#13;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/team_formation_detail.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/team_formation_detail.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&#10;    &lt;title&gt;{{ formation.team_name }} - Team Formation Details&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;{{ formation.team_name }} - {% if formation.is_game %}Game{% else %}Training{% endif %}&lt;/h1&gt;&#10;&#10;    &lt;div&gt;&#10;        &lt;h3&gt;Session Information&lt;/h3&gt;&#10;        &lt;p&gt;&lt;strong&gt;Date:&lt;/strong&gt; {{ formation.session_date }}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Time:&lt;/strong&gt; {{ formation.start_time }}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Location:&lt;/strong&gt; {{ formation.location.name }}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Address:&lt;/strong&gt; {{ formation.session_address }}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Head Coach:&lt;/strong&gt; {{ formation.head_coach.first_name }} {{ formation.head_coach.last_name }}&lt;/p&gt;&#10;        &lt;p&gt;&lt;strong&gt;Type:&lt;/strong&gt; {% if formation.is_game %}Game{% else %}Training Session{% endif %}&lt;/p&gt;&#10;&#10;        {% if formation.is_game and formation.score_team1 is not None and formation.score_team2 is not None %}&#10;        &lt;p&gt;&lt;strong&gt;Final Score:&lt;/strong&gt; {{ formation.score_team1 }} - {{ formation.score_team2 }}&lt;/p&gt;&#10;        {% endif %}&#10;    &lt;/div&gt;&#10;&#10;    &lt;div&gt;&#10;        &lt;a href=&quot;{% url 'team_formation_edit' formation.pk %}&quot;&gt;Edit Formation&lt;/a&gt;&#10;        &lt;a href=&quot;{% url 'player_assignment_create' formation.pk %}&quot;&gt;Add Player&lt;/a&gt;&#10;        &lt;a href=&quot;{% url 'team_formation_delete' formation.pk %}&quot;&gt;Delete Formation&lt;/a&gt;&#10;        &lt;a href=&quot;{% url 'team_formation_list' %}&quot;&gt;Back to List&lt;/a&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;h3&gt;Team Roster ({{ players.count }} players)&lt;/h3&gt;&#10;&#10;    {% if players %}&#10;    &lt;table border=&quot;1&quot;&gt;&#10;        &lt;thead&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;Player Name&lt;/th&gt;&#10;                &lt;th&gt;Role&lt;/th&gt;&#10;                &lt;th&gt;Membership Number&lt;/th&gt;&#10;                &lt;th&gt;Actions&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for player in players %}&#10;            &lt;tr&gt;&#10;                &lt;td&gt;{{ player.club_member.first_name }} {{ player.club_member.last_name }}&lt;/td&gt;&#10;                &lt;td&gt;{{ player.role }}&lt;/td&gt;&#10;                &lt;td&gt;{{ player.club_member.membership_number }}&lt;/td&gt;&#10;                &lt;td&gt;&#10;                    &lt;a href=&quot;{% url 'club_member_detail' player.club_member.pk %}&quot;&gt;View Member&lt;/a&gt;&#10;                    &lt;a href=&quot;{% url 'player_assignment_delete' player.pk %}&quot;&gt;Remove&lt;/a&gt;&#10;                &lt;/td&gt;&#10;            &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;    {% else %}&#10;    &lt;p&gt;No players assigned to this team formation yet.&lt;/p&gt;&#10;    &lt;a href=&quot;{% url 'player_assignment_create' formation.pk %}&quot;&gt;Add First Player&lt;/a&gt;&#10;    {% endif %}&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#13;&#10;&lt;html&gt;&#13;&#10;&lt;head&gt;&#13;&#10;    &lt;title&gt;{{ formation.team_name }} - Team Formation Details&lt;/title&gt;&#13;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#13;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#13;&#10;&lt;/head&gt;&#13;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#13;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;{{ formation.team_name }} - {% if formation.is_game %}Game{% else %}Training{% endif %}&lt;/h1&gt;&#13;&#10;    &lt;div class=&quot;card&quot;&gt;&#13;&#10;        &lt;div class=&quot;card-body&quot;&gt;&#13;&#10;            &lt;h3 class=&quot;card-title&quot;&gt;Session Information&lt;/h3&gt;&#13;&#10;            &lt;p&gt;&lt;strong&gt;Date:&lt;/strong&gt; {{ formation.session_date }}&lt;/p&gt;&#13;&#10;            &lt;p&gt;&lt;strong&gt;Time:&lt;/strong&gt; {{ formation.start_time }}&lt;/p&gt;&#13;&#10;            &lt;p&gt;&lt;strong&gt;Location:&lt;/strong&gt; {{ formation.location.name }}&lt;/p&gt;&#13;&#10;            &lt;p&gt;&lt;strong&gt;Address:&lt;/strong&gt; {{ formation.session_address }}&lt;/p&gt;&#13;&#10;            &lt;p&gt;&lt;strong&gt;Head Coach:&lt;/strong&gt; {{ formation.head_coach.first_name }} {{ formation.head_coach.last_name }}&lt;/p&gt;&#13;&#10;            &lt;p&gt;&lt;strong&gt;Type:&lt;/strong&gt; {% if formation.is_game %}Game{% else %}Training Session{% endif %}&lt;/p&gt;&#13;&#10;&#13;&#10;            {% if formation.is_game and formation.score_team1 is not None and formation.score_team2 is not None %}&#13;&#10;            &lt;p&gt;&lt;strong&gt;Final Score:&lt;/strong&gt; {{ formation.score_team1 }} - {{ formation.score_team2 }}&lt;/p&gt;&#13;&#10;            {% endif %}&#13;&#10;        &lt;/div&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;&#13;&#10;    &lt;div class=&quot;mt-4&quot;&gt;&#13;&#10;        &lt;a href=&quot;{% url 'team_formation_edit' formation.pk %}&quot; class=&quot;btn btn-primary&quot;&gt;Edit Formation&lt;/a&gt;&#13;&#10;        &lt;a href=&quot;{% url 'player_assignment_create' formation.pk %}&quot; class=&quot;btn btn-success&quot;&gt;Add Player&lt;/a&gt;&#13;&#10;        &lt;a href=&quot;{% url 'team_formation_delete' formation.pk %}&quot; class=&quot;btn btn-danger&quot;&gt;Delete Formation&lt;/a&gt;&#13;&#10;        &lt;a href=&quot;{% url 'team_formation_list' %}&quot; class=&quot;btn btn-secondary&quot;&gt;Back to List&lt;/a&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;&#13;&#10;    &lt;h3 class=&quot;mt-5&quot;&gt;Team Roster ({{ players.count }} players)&lt;/h3&gt;&#13;&#10;&#13;&#10;    {% if players %}&#13;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#13;&#10;        &lt;thead class=&quot;table-light&quot;&gt;&#13;&#10;            &lt;tr&gt;&#13;&#10;                &lt;th&gt;Player Name&lt;/th&gt;&#13;&#10;                &lt;th&gt;Role&lt;/th&gt;&#13;&#10;                &lt;th&gt;Membership Number&lt;/th&gt;&#13;&#10;                &lt;th&gt;Actions&lt;/th&gt;&#13;&#10;            &lt;/tr&gt;&#13;&#10;        &lt;/thead&gt;&#13;&#10;        &lt;tbody&gt;&#13;&#10;            {% for player in players %}&#13;&#10;            &lt;tr&gt;&#13;&#10;                &lt;td&gt;{{ player.club_member.first_name }} {{ player.club_member.last_name }}&lt;/td&gt;&#13;&#10;                &lt;td&gt;{{ player.role }}&lt;/td&gt;&#13;&#10;                &lt;td&gt;{{ player.club_member.membership_number }}&lt;/td&gt;&#13;&#10;                &lt;td&gt;&#13;&#10;                    &lt;a href=&quot;{% url 'club_member_detail' player.club_member.pk %}&quot; class=&quot;btn btn-info btn-sm&quot;&gt;View Member&lt;/a&gt;&#13;&#10;                    &lt;a href=&quot;{% url 'player_assignment_delete' player.pk %}&quot; class=&quot;btn btn-danger btn-sm&quot;&gt;Remove&lt;/a&gt;&#13;&#10;                &lt;/td&gt;&#13;&#10;            &lt;/tr&gt;&#13;&#10;            {% endfor %}&#13;&#10;        &lt;/tbody&gt;&#13;&#10;    &lt;/table&gt;&#13;&#10;    {% else %}&#13;&#10;    &lt;p&gt;No players assigned to this team formation yet.&lt;/p&gt;&#13;&#10;    &lt;a href=&quot;{% url 'player_assignment_create' formation.pk %}&quot; class=&quot;btn btn-success&quot;&gt;Add First Player&lt;/a&gt;&#13;&#10;    {% endif %}&#13;&#10;&#13;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#13;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#13;&#10;&lt;/body&gt;&#13;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/team_formation_form.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/team_formation_form.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&#10;    &lt;title&gt;{% if action == 'Create' %}Create{% else %}Edit{% endif %} Team Formation&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;{% if action == 'Create' %}Create{% else %}Edit{% endif %} Team Formation&lt;/h1&gt;&#10;&#10;    &lt;form method=&quot;post&quot;&gt;&#10;        {% csrf_token %}&#10;&#10;        &lt;div&gt;&#10;            &lt;label for=&quot;{{ form.team_name.id_for_label }}&quot;&gt;Team Name:&lt;/label&gt;&#10;            {{ form.team_name }}&#10;            {% if form.team_name.errors %}&#10;                &lt;div&gt;{{ form.team_name.errors }}&lt;/div&gt;&#10;            {% endif %}&#10;        &lt;/div&gt;&#10;&#10;        &lt;div&gt;&#10;            &lt;label for=&quot;{{ form.location.id_for_label }}&quot;&gt;Location:&lt;/label&gt;&#10;            {{ form.location }}&#10;            {% if form.location.errors %}&#10;                &lt;div&gt;{{ form.location.errors }}&lt;/div&gt;&#10;            {% endif %}&#10;        &lt;/div&gt;&#10;&#10;        &lt;div&gt;&#10;            &lt;label for=&quot;{{ form.head_coach.id_for_label }}&quot;&gt;Head Coach:&lt;/label&gt;&#10;            {{ form.head_coach }}&#10;            {% if form.head_coach.errors %}&#10;                &lt;div&gt;{{ form.head_coach.errors }}&lt;/div&gt;&#10;            {% endif %}&#10;        &lt;/div&gt;&#10;&#10;        &lt;div&gt;&#10;            &lt;label for=&quot;{{ form.session_date.id_for_label }}&quot;&gt;Session Date:&lt;/label&gt;&#10;            {{ form.session_date }}&#10;            {% if form.session_date.errors %}&#10;                &lt;div&gt;{{ form.session_date.errors }}&lt;/div&gt;&#10;            {% endif %}&#10;        &lt;/div&gt;&#10;&#10;        &lt;div&gt;&#10;            &lt;label for=&quot;{{ form.start_time.id_for_label }}&quot;&gt;Start Time:&lt;/label&gt;&#10;            {{ form.start_time }}&#10;            {% if form.start_time.errors %}&#10;                &lt;div&gt;{{ form.start_time.errors }}&lt;/div&gt;&#10;            {% endif %}&#10;        &lt;/div&gt;&#10;&#10;        &lt;div&gt;&#10;            &lt;label for=&quot;{{ form.session_address.id_for_label }}&quot;&gt;Session Address:&lt;/label&gt;&#10;            {{ form.session_address }}&#10;            {% if form.session_address.errors %}&#10;                &lt;div&gt;{{ form.session_address.errors }}&lt;/div&gt;&#10;            {% endif %}&#10;        &lt;/div&gt;&#10;&#10;        &lt;div&gt;&#10;            &lt;label&gt;&#10;                {{ form.is_game }} Is this a game? (check for game, uncheck for training)&#10;            &lt;/label&gt;&#10;            {% if form.is_game.errors %}&#10;                &lt;div&gt;{{ form.is_game.errors }}&lt;/div&gt;&#10;            {% endif %}&#10;        &lt;/div&gt;&#10;&#10;        &lt;div&gt;&#10;            &lt;label for=&quot;{{ form.score_team1.id_for_label }}&quot;&gt;Team 1 Score (if game):&lt;/label&gt;&#10;            {{ form.score_team1 }}&#10;            {% if form.score_team1.errors %}&#10;                &lt;div&gt;{{ form.score_team1.errors }}&lt;/div&gt;&#10;            {% endif %}&#10;        &lt;/div&gt;&#10;&#10;        &lt;div&gt;&#10;            &lt;label for=&quot;{{ form.score_team2.id_for_label }}&quot;&gt;Team 2 Score (if game):&lt;/label&gt;&#10;            {{ form.score_team2 }}&#10;            {% if form.score_team2.errors %}&#10;                &lt;div&gt;{{ form.score_team2.errors }}&lt;/div&gt;&#10;            {% endif %}&#10;        &lt;/div&gt;&#10;&#10;        &lt;button type=&quot;submit&quot;&gt;{% if action == 'Create' %}Create{% else %}Update{% endif %}&lt;/button&gt;&#10;        &lt;a href=&quot;{% url 'team_formation_list' %}&quot;&gt;Cancel&lt;/a&gt;&#10;    &lt;/form&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#13;&#10;&lt;html&gt;&#13;&#10;&lt;head&gt;&#13;&#10;    &lt;title&gt;{% if action == 'Create' %}Create{% else %}Edit{% endif %} Team Formation&lt;/title&gt;&#13;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#13;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#13;&#10;&lt;/head&gt;&#13;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#13;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;{% if action == 'Create' %}Create{% else %}Edit{% endif %} Team Formation&lt;/h1&gt;&#13;&#10;&#13;&#10;    &lt;form method=&quot;post&quot; class=&quot;needs-validation&quot; novalidate&gt;&#13;&#10;        {% csrf_token %}&#13;&#10;&#13;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#13;&#10;            &lt;label for=&quot;{{ form.team_name.id_for_label }}&quot; class=&quot;form-label&quot;&gt;Team Name:&lt;/label&gt;&#13;&#10;            {{ form.team_name }}&#13;&#10;            {% if form.team_name.errors %}&#13;&#10;                &lt;div class=&quot;text-danger&quot;&gt;{{ form.team_name.errors }}&lt;/div&gt;&#13;&#10;            {% endif %}&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#13;&#10;            &lt;label for=&quot;{{ form.location.id_for_label }}&quot; class=&quot;form-label&quot;&gt;Location:&lt;/label&gt;&#13;&#10;            {{ form.location }}&#13;&#10;            {% if form.location.errors %}&#13;&#10;                &lt;div class=&quot;text-danger&quot;&gt;{{ form.location.errors }}&lt;/div&gt;&#13;&#10;            {% endif %}&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#13;&#10;            &lt;label for=&quot;{{ form.head_coach.id_for_label }}&quot; class=&quot;form-label&quot;&gt;Head Coach:&lt;/label&gt;&#13;&#10;            {{ form.head_coach }}&#13;&#10;            {% if form.head_coach.errors %}&#13;&#10;                &lt;div class=&quot;text-danger&quot;&gt;{{ form.head_coach.errors }}&lt;/div&gt;&#13;&#10;            {% endif %}&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#13;&#10;            &lt;label for=&quot;{{ form.session_date.id_for_label }}&quot; class=&quot;form-label&quot;&gt;Session Date:&lt;/label&gt;&#13;&#10;            {{ form.session_date }}&#13;&#10;            {% if form.session_date.errors %}&#13;&#10;                &lt;div class=&quot;text-danger&quot;&gt;{{ form.session_date.errors }}&lt;/div&gt;&#13;&#10;            {% endif %}&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#13;&#10;            &lt;label for=&quot;{{ form.start_time.id_for_label }}&quot; class=&quot;form-label&quot;&gt;Start Time:&lt;/label&gt;&#13;&#10;            {{ form.start_time }}&#13;&#10;            {% if form.start_time.errors %}&#13;&#10;                &lt;div class=&quot;text-danger&quot;&gt;{{ form.start_time.errors }}&lt;/div&gt;&#13;&#10;            {% endif %}&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#13;&#10;            &lt;label for=&quot;{{ form.session_address.id_for_label }}&quot; class=&quot;form-label&quot;&gt;Session Address:&lt;/label&gt;&#13;&#10;            {{ form.session_address }}&#13;&#10;            {% if form.session_address.errors %}&#13;&#10;                &lt;div class=&quot;text-danger&quot;&gt;{{ form.session_address.errors }}&lt;/div&gt;&#13;&#10;            {% endif %}&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#13;&#10;            &lt;label&gt;&#13;&#10;                {{ form.is_game }} Is this a game? (check for game, uncheck for training)&#13;&#10;            &lt;/label&gt;&#13;&#10;            {% if form.is_game.errors %}&#13;&#10;                &lt;div class=&quot;text-danger&quot;&gt;{{ form.is_game.errors }}&lt;/div&gt;&#13;&#10;            {% endif %}&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#13;&#10;            &lt;label for=&quot;{{ form.score_team1.id_for_label }}&quot; class=&quot;form-label&quot;&gt;Team 1 Score (if game):&lt;/label&gt;&#13;&#10;            {{ form.score_team1 }}&#13;&#10;            {% if form.score_team1.errors %}&#13;&#10;                &lt;div class=&quot;text-danger&quot;&gt;{{ form.score_team1.errors }}&lt;/div&gt;&#13;&#10;            {% endif %}&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#13;&#10;            &lt;label for=&quot;{{ form.score_team2.id_for_label }}&quot; class=&quot;form-label&quot;&gt;Team 2 Score (if game):&lt;/label&gt;&#13;&#10;            {{ form.score_team2 }}&#13;&#10;            {% if form.score_team2.errors %}&#13;&#10;                &lt;div class=&quot;text-danger&quot;&gt;{{ form.score_team2.errors }}&lt;/div&gt;&#13;&#10;            {% endif %}&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;{% if action == 'Create' %}Create{% else %}Update{% endif %}&lt;/button&gt;&#13;&#10;        &lt;a href=&quot;{% url 'team_formation_list' %}&quot; class=&quot;btn btn-secondary&quot;&gt;Cancel&lt;/a&gt;&#13;&#10;    &lt;/form&gt;&#13;&#10;&#13;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#13;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#13;&#10;&lt;/body&gt;&#13;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/club/templates/team_formation_list.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/club/templates/team_formation_list.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&#10;    &lt;title&gt;Team Formations&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Team Formations&lt;/h1&gt;&#10;&#10;    &lt;a href=&quot;{% url 'team_formation_create' %}&quot;&gt;Create New Team Formation&lt;/a&gt;&#10;    &lt;a href=&quot;{% url 'main_interface' %}&quot;&gt;Back to Main&lt;/a&gt;&#10;&#10;    {% if formations %}&#10;    &lt;table border=&quot;1&quot;&gt;&#10;        &lt;thead&gt;&#10;            &lt;tr&gt;&#10;                &lt;th&gt;Team Name&lt;/th&gt;&#10;                &lt;th&gt;Session Date&lt;/th&gt;&#10;                &lt;th&gt;Start Time&lt;/th&gt;&#10;                &lt;th&gt;Type&lt;/th&gt;&#10;                &lt;th&gt;Location&lt;/th&gt;&#10;                &lt;th&gt;Head Coach&lt;/th&gt;&#10;                &lt;th&gt;Players&lt;/th&gt;&#10;                &lt;th&gt;Actions&lt;/th&gt;&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for formation in formations %}&#10;            &lt;tr&gt;&#10;                &lt;td&gt;{{ formation.team_name }}&lt;/td&gt;&#10;                &lt;td&gt;{{ formation.session_date }}&lt;/td&gt;&#10;                &lt;td&gt;{{ formation.start_time }}&lt;/td&gt;&#10;                &lt;td&gt;{% if formation.is_game %}Game{% else %}Training{% endif %}&lt;/td&gt;&#10;                &lt;td&gt;{{ formation.location.name }}&lt;/td&gt;&#10;                &lt;td&gt;{{ formation.head_coach.first_name }} {{ formation.head_coach.last_name }}&lt;/td&gt;&#10;                &lt;td&gt;{{ formation.players.count }}&lt;/td&gt;&#10;                &lt;td&gt;&#10;                    &lt;a href=&quot;{% url 'team_formation_detail' formation.pk %}&quot;&gt;View&lt;/a&gt;&#10;                    &lt;a href=&quot;{% url 'team_formation_edit' formation.pk %}&quot;&gt;Edit&lt;/a&gt;&#10;                    &lt;a href=&quot;{% url 'team_formation_delete' formation.pk %}&quot;&gt;Delete&lt;/a&gt;&#10;                &lt;/td&gt;&#10;            &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;    {% else %}&#10;    &lt;p&gt;No team formations found.&lt;/p&gt;&#10;    {% endif %}&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#13;&#10;&lt;html&gt;&#13;&#10;&lt;head&gt;&#13;&#10;    &lt;title&gt;Team Formations&lt;/title&gt;&#13;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#13;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#13;&#10;&lt;/head&gt;&#13;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#13;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Team Formations&lt;/h1&gt;&#13;&#10;    &lt;div class=&quot;mb-3&quot;&gt;&#13;&#10;        &lt;a class=&quot;btn btn-success&quot; href=&quot;{% url 'team_formation_create' %}&quot;&gt;Create New Team Formation&lt;/a&gt;&#13;&#10;        &lt;a class=&quot;btn btn-secondary&quot; href=&quot;{% url 'main_interface' %}&quot;&gt;Back to Main&lt;/a&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;    {% if formations %}&#13;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#13;&#10;        &lt;thead class=&quot;table-dark&quot;&gt;&#13;&#10;            &lt;tr&gt;&#13;&#10;                &lt;th&gt;Team Name&lt;/th&gt;&#13;&#10;                &lt;th&gt;Session Date&lt;/th&gt;&#13;&#10;                &lt;th&gt;Start Time&lt;/th&gt;&#13;&#10;                &lt;th&gt;Type&lt;/th&gt;&#13;&#10;                &lt;th&gt;Location&lt;/th&gt;&#13;&#10;                &lt;th&gt;Head Coach&lt;/th&gt;&#13;&#10;            &lt;/tr&gt;&#13;&#10;        &lt;/thead&gt;&#13;&#10;        &lt;tbody&gt;&#13;&#10;            {% for formation in formations %}&#13;&#10;            &lt;tr&gt;&#13;&#10;                &lt;td&gt;{{ formation.team_name }}&lt;/td&gt;&#13;&#10;                &lt;td&gt;{{ formation.session_date }}&lt;/td&gt;&#13;&#10;                &lt;td&gt;{{ formation.start_time }}&lt;/td&gt;&#13;&#10;                &lt;td&gt;{% if formation.is_game %}Game{% else %}Training{% endif %}&lt;/td&gt;&#13;&#10;                &lt;td&gt;{{ formation.location.name }}&lt;/td&gt;&#13;&#10;                &lt;td&gt;{{ formation.head_coach.first_name }} {{ formation.head_coach.last_name }}&lt;/td&gt;&#13;&#10;            &lt;/tr&gt;&#13;&#10;            {% endfor %}&#13;&#10;        &lt;/tbody&gt;&#13;&#10;    &lt;/table&gt;&#13;&#10;    {% else %}&#13;&#10;    &lt;p&gt;No team formations available.&lt;/p&gt;&#13;&#10;    {% endif %}&#13;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#13;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#13;&#10;&lt;/body&gt;&#13;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/queries_asked/templates/index.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/queries_asked/templates/index.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&#10;    &lt;title&gt;Queries&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Queries&lt;/h1&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=1 %}'&quot;&gt;Query 1&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=2 %}'&quot;&gt;Query 2&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=3 %}'&quot;&gt;Query 3&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=4 %}'&quot;&gt;Query 4&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=5 %}'&quot;&gt;Query 5&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=6 %}'&quot;&gt;Query 6&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=7 %}'&quot;&gt;Query 7&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=8 %}'&quot;&gt;Query 8&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=9 %}'&quot;&gt;Query 9&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=10 %}'&quot;&gt;Query 10&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=11 %}'&quot;&gt;Query 11&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=12 %}'&quot;&gt;Query 12&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=13 %}'&quot;&gt;Query 13&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=14 %}'&quot;&gt;Query 14&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=15 %}'&quot;&gt;Query 15&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=16 %}'&quot;&gt;Query 16&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=17 %}'&quot;&gt;Query 17&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=18 %}'&quot;&gt;Query 18&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=19 %}'&quot;&gt;Query 19&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=20 %}'&quot;&gt;Query 20&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=21 %}'&quot;&gt;Query 21&lt;/button&gt;&#10;    &lt;button onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=22 %}'&quot;&gt;Query 22&lt;/button&gt;&#10;&lt;/body&gt;&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&#10;    &lt;title&gt;Queries&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Queries&lt;/h1&gt;&#10;    &lt;div class=&quot;d-grid gap-2&quot;&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=1 %}'&quot;&gt;Query 1&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=2 %}'&quot;&gt;Query 2&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=3 %}'&quot;&gt;Query 3&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=4 %}'&quot;&gt;Query 4&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=5 %}'&quot;&gt;Query 5&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=6 %}'&quot;&gt;Query 6&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=7 %}'&quot;&gt;Query 7&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=8 %}'&quot;&gt;Query 8&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=9 %}'&quot;&gt;Query 9&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=10 %}'&quot;&gt;Query 10&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=11 %}'&quot;&gt;Query 11&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=12 %}'&quot;&gt;Query 12&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=13 %}'&quot;&gt;Query 13&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=14 %}'&quot;&gt;Query 14&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=15 %}'&quot;&gt;Query 15&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=16 %}'&quot;&gt;Query 16&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=17 %}'&quot;&gt;Query 17&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=18 %}'&quot;&gt;Query 18&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=19 %}'&quot;&gt;Query 19&lt;/button&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; onclick=&quot;window.location.href='{% url 'queries_asked:query' query_number=20 %}'&quot;&gt;Query 20&lt;/button&gt;&#10;    &lt;/div&gt;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/project_name/queries_asked/templates/query_results.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/project_name/queries_asked/templates/query_results.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&#10;    &lt;title&gt;Query Results&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;h1&gt;Query Results&lt;/h1&gt;&#10;    &lt;table border=&quot;1&quot;&gt;&#10;        &lt;thead&gt;&#10;            &lt;tr&gt;&#10;                {% for column in rows.0 %}&#10;                &lt;th&gt;{{ column }}&lt;/th&gt;&#10;                {% endfor %}&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for row in rows %}&#10;            &lt;tr&gt;&#10;                {% for cell in row %}&#10;                &lt;td&gt;{{ cell }}&lt;/td&gt;&#10;                {% endfor %}&#10;            &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&#10;    &lt;title&gt;Query Results&lt;/title&gt;&#10;    &lt;!-- Add Bootstrap CSS --&gt;&#10;    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;container mt-5&quot;&gt;&#10;    &lt;h1 class=&quot;mb-4&quot;&gt;Query Results&lt;/h1&gt;&#10;    &lt;table class=&quot;table table-bordered&quot;&gt;&#10;        &lt;thead class=&quot;table-dark&quot;&gt;&#10;            &lt;tr&gt;&#10;                {% for column in rows.0 %}&#10;                &lt;th&gt;{{ column }}&lt;/th&gt;&#10;                {% endfor %}&#10;            &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody&gt;&#10;            {% for row in rows %}&#10;            &lt;tr&gt;&#10;                {% for cell in row %}&#10;                &lt;td&gt;{{ cell }}&lt;/td&gt;&#10;                {% endfor %}&#10;            &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;    &lt;!-- Add Bootstrap JS --&gt;&#10;    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>